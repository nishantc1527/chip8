// Code generated for package main by go-bindata DO NOT EDIT. (@generated)
// sources:
// assets/15puzzle.rom
// assets/banner.txt
// assets/beep.wav
// assets/blinky.rom
// assets/blitz.rom
// assets/breakout.rom
// assets/brix.rom
// assets/connect4.rom
// assets/guess.rom
// assets/hidden.rom
// assets/invaders.rom
// assets/kaleid.rom
// assets/maze.rom
// assets/merlin.rom
// assets/missile.rom
// assets/pong.rom
// assets/pong2.rom
// assets/puzzle.rom
// assets/squash.rom
// assets/syzygy.rom
// assets/tank.rom
// assets/tetris.rom
// assets/tictac.rom
// assets/ufo.rom
// assets/vbrix.rom
// assets/vers.rom
// assets/wall.rom
// assets/wipeoff.rom
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assets15puzzleRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xc8\x2f\x4f\xf3\x40\x1c\x07\xf0\xef\xf5\xda\xee\xdf\x6d\xb7\x9c\x99\x59\x9a\x27\x3f\xf7\xf8\xe1\x10\x23\x21\x53\x08\x4c\xed\x52\xc6\x9d\x23\x24\x40\x32\x05\xae\xc8\x55\xa1\x49\x38\xc1\xcb\xe0\x1d\x60\xaa\x26\x97\x06\x51\xb3\xcb\x91\x20\x10\xc0\x48\xaa\x98\xfc\x7c\xb0\xb9\xc0\x09\x2e\xa5\xe5\xd9\x3f\x9f\x62\x43\x2f\xb4\xa4\x82\xe6\x34\x53\xc3\x33\x2c\x46\xe7\xe1\xd1\x10\xce\xd6\xef\x89\x37\x53\xa8\x89\xff\x5f\x1e\x5c\xb1\xeb\x48\xf3\x5c\x4d\xa0\x68\x31\xba\x89\x15\x69\x9e\x57\x86\xdf\x97\x0f\xa7\x70\xc7\x1c\x4e\xb3\xfc\x8d\x9e\xd5\x6c\xef\x01\xa7\x77\xcd\xcf\xb5\xc8\x2b\x23\xfe\xfc\x57\xf3\xcb\xbd\x17\x70\x3a\x6c\xbe\xb0\xf5\x47\xe2\x8d\xad\x7f\x12\x9f\x66\x68\x94\x16\x53\xb8\x43\xa8\x92\xc6\xb4\xa6\xb1\xfd\xfc\x4e\xbc\x59\x01\xee\x76\xf7\x2a\xe1\xee\x58\x26\x57\xc1\xf6\x51\xad\xb7\x4f\xaa\x82\x63\x01\x0f\xa3\xb8\xd5\xee\x74\x7b\xa2\x3f\x90\xe8\x83\x05\x61\x14\xb7\x3b\x5d\x31\xe0\xad\x9e\xfc\x0d\x00\x00\xff\xff\xb1\x37\xce\x30\x08\x01\x00\x00")

func assets15puzzleRomBytes() ([]byte, error) {
	return bindataRead(
		_assets15puzzleRom,
		"assets/15puzzle.rom",
	)
}

func assets15puzzleRom() (*asset, error) {
	bytes, err := assets15puzzleRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/15puzzle.rom", size: 264, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsBannerTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xc1\x0a\xc2\x40\x0c\x44\xef\xf9\x8a\x77\x53\x2f\xee\xd5\x83\x08\x52\xfc\x8b\xc2\xe0\xa1\xa0\xd0\xd2\x22\xf5\x96\x8f\x97\xa4\x5d\xa5\x38\x0b\xc9\x92\x37\x93\x5d\x03\x85\x10\xa1\xa5\x2e\x57\x09\x8c\x92\xdc\x71\x60\xaf\x43\xa5\x05\xd1\x62\xcb\x1c\xc7\xc3\x1d\x5b\xa2\xe3\x69\xf5\x1f\xde\x89\xd6\xd7\x0e\x5c\x10\xe7\x4c\xd7\xe5\xeb\x89\xd4\x37\x4d\x9b\x5f\xf3\x30\x64\x3d\x4a\x05\x72\x5c\x30\xb6\x5a\xdf\xaa\xfa\xc3\xda\x62\xbb\xd2\x8c\xc3\xd4\x77\x73\x47\xf3\x78\x4e\x9c\xb8\x0d\xef\xfe\x3e\x8f\x2f\xb3\x4f\x00\x00\x00\xff\xff\x9a\x51\x44\xe1\x16\x01\x00\x00")

func assetsBannerTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsBannerTxt,
		"assets/banner.txt",
	)
}

func assetsBannerTxt() (*asset, error) {
	bytes, err := assetsBannerTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/banner.txt", size: 278, mode: os.FileMode(420), modTime: time.Unix(1624819343, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsBeepWav = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x98\x09\x50\x54\x57\xba\xc7\x7f\x47\x4d\xa2\x26\xfa\x8c\x9a\xa0\xa2\xc6\x2d\x6a\x26\x12\xc7\x05\x75\xa2\x18\x54\x82\x0b\xfb\xbe\x09\x2a\x22\xee\x80\x08\x26\x18\x95\x00\x86\xc5\x00\x06\x21\x08\xc3\x12\x96\x61\xef\x6e\xba\x1b\x9a\x46\x96\xb0\x28\x20\x5b\x00\x05\x8c\x40\x5c\x06\x75\x44\x33\xc4\x15\xa3\x31\xf2\xca\xfb\x5e\xd5\xbc\xaa\x77\x6e\xd5\xed\x7b\xef\xb9\x7d\xcf\xff\xfb\x9f\xdf\xf7\x9d\xaa\x63\xbd\xd9\xd8\xd8\x63\x12\x38\xac\xb3\xff\xdc\xf3\xa0\xdf\xac\x89\x80\x40\x60\x24\x83\x70\x47\xc1\x08\x26\x00\x9e\x3b\x76\xfa\x8d\xe2\x7f\x9a\xc7\x0e\xbf\x1d\x83\x13\xe1\xaf\xdc\x1b\x6e\x1f\xbe\x3d\x3c\x9e\xe9\x8c\x63\x14\xbf\x0f\xcf\x46\x97\x49\xe8\xb2\x1a\x23\x3e\xe4\xda\xb0\x11\xa7\x38\x8d\xb1\x38\x33\xe2\xd4\x88\x9e\x57\xbe\x2f\x77\xbc\x65\xb0\xb0\xdf\xe6\x8b\x03\x6b\x1c\xf5\xa6\x5e\x6d\xfb\x22\xcd\xf4\xec\xde\xac\x71\xc5\x9b\xb4\x51\xaa\xc7\xf9\x13\xf3\x4e\x16\x78\x2b\xfc\x0b\xaf\xc9\xa7\xcb\x0c\x64\x0f\xe5\x1b\x0b\x5b\x15\xdf\xca\x6f\xcb\x46\x2b\xbe\x2a\x0c\x28\x0c\x56\xd4\xc8\xff\xa6\x98\x56\x38\x56\x59\x58\xd8\xa5\xe8\x55\x84\x17\x7e\xa1\x0c\x51\x2a\x0b\xfd\x0a\x5f\x14\xc6\x29\x3f\x54\xc5\x28\x3f\x53\x1a\x28\x7f\x56\x3a\xaa\x66\xab\x26\xaa\xfa\x94\x2b\x54\x35\xaa\x76\x55\xbc\xea\x4f\xd5\xb7\xea\x39\xc5\x1d\x9a\x85\x25\xe3\x35\x9f\x6a\xfb\x2f\x2e\x78\x52\xbd\x54\xb6\x6f\x38\x70\xcc\x81\xa9\x9b\xb3\x3f\xfd\xc9\xc4\x76\xf7\x90\xd7\xa7\xae\xbb\x36\x19\x6d\x6a\x75\x1e\xb9\xb7\xc8\xfd\x6b\xcb\x39\x9b\x02\xad\xd7\xba\xbb\x79\x7c\xe7\x90\x6d\xf2\xbb\x99\xcc\x79\x9e\x3b\x5b\x6d\x2c\xfb\x4c\xff\x6e\xfb\xbb\x6b\xbb\xeb\x35\xdb\x89\xe6\x63\xad\x8e\x39\x5d\xde\x9a\xe3\xe0\x6f\x39\xc3\xe2\xae\xed\x11\xe7\x66\xc7\x70\xeb\xf1\x16\x7f\x5a\x7d\xe9\xa0\x71\x74\xb7\x5d\x63\x39\xc5\x72\xb4\x6d\x85\xfd\x21\x5b\x27\x0b\x5b\x53\xad\xf9\x4a\xeb\x14\x93\x5a\xbd\xe1\xa1\x6c\xed\xda\xa8\x49\xdf\xfe\x98\xbb\xb5\x6e\x4e\xdd\x53\x99\x63\x42\x59\xf2\x06\xb5\x75\xd5\x2b\xcd\xda\xcc\x7f\xa4\x78\xe4\x7f\x73\xee\xd0\xb9\x33\x05\x86\xe9\x4b\xb2\x63\x8a\x4a\xcf\xe9\xa8\xf7\x64\x0f\xfe\x23\x52\x61\xab\xf5\xd7\xcc\x92\x25\x67\x2f\x2e\xd0\x2d\x6e\x2a\xc9\x52\x16\xe5\xad\xca\x9f\xa3\xd2\x2d\xe9\x29\xca\x91\x77\xe5\x87\x2b\xec\x8a\xdf\xd5\x64\x2b\x4f\xcb\x2e\xcb\xbf\x56\xff\x5e\xdc\xaf\x9e\x57\xd8\xa6\xb8\xa0\x3e\xa4\xbd\xae\xdd\x57\xdc\x55\x44\xad\xef\xc0\xec\xf9\xf2\x1d\x2d\x27\xf4\x7c\x5f\x99\xdf\xf9\x5b\xdb\xe7\x3e\xee\x6f\xfb\xc4\xed\x38\xb2\x65\xfe\xe7\xd8\x27\xef\xde\xbe\x2b\xd4\x26\x7f\xa3\x8e\x85\xd7\xb6\x47\x1e\x5e\xce\xe9\xa6\xf9\x26\xf1\x0e\x8e\x3b\x9a\x5d\xdb\xac\xee\x9b\xbc\x6b\x7d\x60\xab\x8b\xdb\x26\xfb\x55\xe6\xb3\x2d\xbe\x76\xc8\xdd\x5a\xe9\xf8\xd2\x72\xb7\xb9\xa9\x4d\xaa\x53\x9c\x53\x93\xcd\x73\xf3\x62\x4b\x57\xfb\x7f\x39\x7a\xdb\x1d\xb1\x4c\xb4\xf8\x8b\x4d\x98\xfd\x2f\xb6\x95\x16\xe3\x4c\xdf\x36\xdf\x68\xfd\xcc\x6c\xbe\xfe\xc0\x88\x9e\xf3\xc3\x67\xbc\xc2\x0e\xfd\x10\x54\xa5\x77\xf1\x7a\xd1\xae\xa4\xf4\x84\xa9\xb2\xfe\x4a\xc7\xb2\xf8\x9c\x1d\xc9\x0e\x59\xf9\x25\x09\xe5\xb5\x85\x73\x32\xee\x65\x34\x16\x9e\x3e\xe7\xa2\x69\xca\xfd\x2e\xf3\x55\xfe\x4b\x4d\x80\xb6\x4a\xd1\x97\x7d\x3b\xb7\x5b\x35\x50\xf2\x2f\xf5\xe5\xfc\x87\xb9\x1d\x0a\x2b\xcd\x48\x4d\x97\x22\x24\xff\xae\x2c\x55\xed\xaf\xd1\x53\x2f\x96\x37\xc8\xf4\x54\x23\x35\xff\x2e\x7a\x59\xa8\xab\xf8\x50\x75\xa4\xe4\x50\x69\x53\xf1\x55\x55\x69\x45\xee\x0d\x99\xee\x38\x27\xd5\x57\xa7\xfd\xfd\xec\x4a\x0d\xfc\x36\x5c\xd9\x6a\x76\xf0\x7b\x8f\xf9\x16\xdb\x8d\xbd\xad\xdb\x77\x6a\x77\x59\x38\xec\xdc\x72\xc8\xac\xcf\x45\xb5\xf3\xc0\x56\x37\x8b\x57\x26\x8f\x6c\x97\x6c\xf3\x77\x9b\x6c\xfb\xa3\x69\x90\xe5\x43\xa7\x9f\x5d\x7f\x71\x38\x60\x11\x6b\xee\x6f\xb7\xcd\xe5\x3b\x27\x37\xeb\x6f\xcd\xdf\xb5\x6e\x76\x30\x77\xca\xb6\x4d\xb7\x30\xb0\xec\xb6\x1d\x72\xb8\x67\x77\xd0\xea\xa4\xc5\x27\xd6\xa9\x76\xc6\x76\xfd\x96\x51\xa6\xed\xa6\x4e\x56\xe7\x2c\x1d\x0d\xbe\x1a\x3f\xf9\xa7\x8c\xb3\x15\xdf\x9c\x4a\xfa\x77\x45\xde\x45\x59\xc9\xca\x94\x9a\xb3\xda\xbc\xe3\x15\xd3\xcb\x97\xe6\x3d\x4b\xfe\x23\xb3\xb9\xd8\xad\x7c\x92\x6a\x4e\x26\x19\x86\x8a\xd6\xd2\x22\xcd\xcd\xbc\xc4\xcc\x9f\xf3\x52\x8b\xc7\x69\xd7\x14\x8e\xce\x79\x33\x37\x40\x69\x5f\x42\x91\x43\x41\x44\xae\x56\x7e\xb8\x78\xa8\x78\x5a\xe1\xa1\xfc\x9d\xb2\x99\xea\x37\x34\x53\xd4\xb3\xe5\x0e\xb2\xaf\x94\x6e\xc5\x3f\x15\x7d\xa2\x34\x55\x7c\xa5\xdc\xa0\xb9\xa7\x3d\xa6\x71\x55\x8f\x3d\xf7\x65\xf7\xc2\xf1\x5f\x9a\x47\x04\x44\x1e\x5d\xe0\xf2\xb5\xc1\xdc\xb5\x96\x8e\x85\x07\x47\xed\x59\x66\xa5\x6f\x94\x63\x6e\xef\xfe\x60\xf7\x65\xa7\xdb\x9b\x83\xb7\x6c\x76\x32\xf3\x48\x77\xfb\xc0\xf2\xf9\xe6\x12\xeb\x22\xb7\x37\xb7\xb7\xd8\x45\x99\x3e\x31\xef\x75\x3c\xea\xb6\xc9\xa9\xd7\x62\xa7\xd9\x74\x5b\x23\x97\x38\xe7\x59\x36\x83\x66\x95\x96\xe6\x0e\x1f\x39\xc7\xdb\xa9\x2d\xe6\x59\x8c\xb6\x75\x71\xac\xb4\x97\x5b\x4d\xb2\x38\x63\x95\x6c\x27\xb3\x3b\x61\x35\x6c\xea\x6f\xea\x6a\xf9\xad\xe5\xc6\x75\xf3\xa6\x8e\xfc\x65\x71\xe6\xa7\x61\xc7\x62\xf7\x17\xbb\x5f\x8c\xa8\xbc\x9f\xb1\x3c\xfe\xed\xcc\xb8\xd2\x5f\x2a\x77\x2a\x5e\xa5\xf8\xfd\xa0\xaf\xf4\x2b\x1f\xad\xf9\x30\x3b\x2c\x6d\x4f\xfe\x22\xed\xcc\xd2\x69\xf2\xbe\xcc\x37\x72\x56\xa8\x47\x96\xfa\xab\xef\xe5\xd6\x65\x77\xc9\x73\x35\x55\xc5\xef\xc8\x17\xe5\x06\x14\x34\xa8\x7f\xd4\xe8\xa8\x26\x16\x3c\xc8\x37\x55\xa6\x16\x7b\x16\x45\x28\x1e\x14\x3c\x54\x44\x16\xb9\x17\x2f\x50\x8d\x51\xec\x2f\x74\x29\xee\xd4\x0e\x6b\xa6\xa9\x4f\x97\x58\xb6\x2f\x18\xf9\xe3\xba\xb9\x87\x2a\x8e\xa6\xba\x8f\x31\x1a\x5a\xb3\xc1\xca\x64\xcf\xfb\xfb\xde\x77\x90\x19\xd7\x6d\x79\xd3\xb5\xc7\xf3\x27\xd7\x64\x33\xaf\xcd\x8b\xec\x6a\x77\x44\x6d\xbf\x61\x33\xc9\xe4\x9f\x16\xf6\x2e\x37\xb7\xed\x71\xdc\x6d\xee\x69\xa6\xb5\x9b\xe6\x5a\xed\x2c\xac\xf5\xcd\x26\x5b\x2d\x75\x8c\x73\xaa\xb6\xc9\x34\x6b\x31\xdb\x60\xd3\x6f\xff\xa9\xad\x87\xf9\x7c\xd3\xf5\x16\x9e\x36\x2e\x36\xbf\x99\x2f\x36\x19\x69\x1a\x68\xf1\xbd\xa5\x93\x59\xf2\xa6\x5a\xe3\xd4\xcd\x8f\x4c\xce\xaf\x9b\x32\xdb\xe9\xfe\x37\x45\x5f\xc7\x06\x24\xdc\x2a\x5e\xdb\x6c\xd2\x70\x57\x79\x2b\x7d\x4a\x9e\x71\xc5\xc2\xba\x8f\xcb\x47\xcb\x7e\xc8\xfb\xaf\x12\xbb\xda\x8a\xea\x80\xe2\x15\xf2\xcf\x8a\xce\xfd\xe8\x5d\xfb\x4e\xb9\x87\xba\x42\x9d\x51\xbe\xb3\xb6\xba\x6a\x6d\x69\x77\x71\xe7\xb9\xce\x6a\xbd\x5a\x83\xca\x90\xd2\xc1\x73\xe7\xab\x8e\x9c\xbf\x5e\x6d\x5d\xb1\xb7\x7c\x6e\x55\xec\xf9\x13\xe7\xff\x52\xad\xae\x34\xaf\xd2\x3f\x3f\xbb\x2e\xe4\xfc\x40\xb5\x51\xcd\x3f\x2f\xd8\x5f\x3c\x70\x31\xb4\xce\xb3\x7e\x79\xd7\xd0\xb3\x6f\x16\xa8\x2c\x5c\x5c\x87\xcc\x3e\xd3\x7f\xf9\xf1\x94\x55\x8b\xb7\xc4\x98\x4f\x58\xff\xf1\x72\xaf\xe5\x69\x86\x81\x9b\xaf\x18\x65\xae\x8a\x5e\x36\xe9\x53\x93\x0d\xf6\x46\x53\xd6\xb8\x2f\x1f\xd0\x6f\x32\xb8\xb0\xce\xd3\x60\x58\x7f\xd4\xf2\xa0\x55\x8f\x0c\x76\x18\xf8\xae\xf4\x5f\x66\xa6\xff\xc7\xdf\xb2\x56\xaf\x58\xf5\xfd\xb2\xf2\xa5\x33\x57\xdc\x59\x55\xb8\xf2\xd5\xb2\xc3\x4b\x46\x2e\xfb\x64\xc5\x97\x2b\xfe\xb9\xec\xcd\x25\x63\x97\x2c\x5b\x36\x77\xf9\xc9\xa5\xc1\x8b\x15\x7a\x21\x9f\x78\xfd\x55\xb6\xe8\x98\xae\xdb\x1f\x01\xdd\x86\x95\xfa\x15\x0e\x3f\x19\x5d\x77\xbe\x3e\xa5\x63\x69\xdd\xbc\x8b\x1b\xbb\x1e\xf7\x1d\xbe\xd2\xde\xf2\x6e\x53\x6d\x87\x7f\x4f\x44\xcf\x9d\x4b\xde\xad\xc7\xda\xbf\xf9\xf9\x5f\xbd\x11\x57\x4e\x76\xe8\x77\xa8\xbb\x8b\x7b\x7f\xe8\xd1\x76\x19\x5f\x7e\xa7\xfb\x4a\xcf\xe1\xbe\xad\x57\xb7\x74\x7f\xdf\x6d\xde\xe3\xf5\xcb\x67\x7d\xc7\xaf\x1a\xfd\x1c\xd5\xd3\xf0\xcb\x92\x6b\x0b\xfb\x4e\xf4\x9c\xeb\x5d\x7c\xed\xd0\xf5\x9c\x6b\xd5\x7d\x57\xfb\x9e\x5d\x9b\x70\x33\xf0\xa6\xe1\x0d\xbd\x1b\x55\x77\x8e\x3c\x0b\x9b\x10\xbd\xf0\x87\x65\xd6\x9f\x4c\x99\x95\xa4\xf3\x52\xf7\x87\xf9\xc5\x1f\xcf\x9d\xff\x6a\xba\x6c\xda\xdf\x67\xd5\xcc\x7f\x67\x7e\xf0\x07\x23\x74\x5d\x67\xa8\xe7\x14\xcf\xcb\x98\xe5\xa3\x3b\x59\xf7\xc1\xcc\x8f\xe6\x24\xce\x1a\x3d\x5d\x67\xda\x35\xdd\xae\x99\xb6\x1f\xa4\x4e\x3f\x31\x35\x6b\xaa\xdd\xf4\xe4\x19\x8e\xd3\x9b\xa7\x46\x4d\xb9\x32\xd5\x4d\x77\xb2\xee\x86\xa9\x81\x3a\x5a\x9d\x5f\xa7\x2c\x9c\xaa\x3f\x45\xf9\xbe\xed\xfb\x13\x75\xbe\xd3\x99\xa6\x73\xf0\xbd\xf5\x93\xf3\x26\x07\xbf\xf7\xe7\xa4\x82\x71\x0b\xc4\xcb\x87\x83\x77\xa2\x6e\x35\xdc\x5b\xf2\x68\xc6\x93\x9f\x7e\x3b\x7e\x6f\xd3\x3d\xf9\x60\xfe\xa3\xd9\x8f\x3c\x07\xbd\x7f\x8d\x1d\x1c\xf7\x68\xe3\x63\xbd\x87\x63\x7f\x73\xfc\xed\xf2\xc3\xb6\xc7\x53\x1f\x07\x3c\xcc\x7d\xa0\xff\xc8\xf0\xc9\xc9\x27\x61\x8f\x7d\x1e\x99\x3c\x6e\x79\x72\xeb\xe9\xfe\xa7\x86\x4f\x3c\x9f\x44\x3e\xcd\x18\xca\x1e\x9a\x31\x74\xe9\x69\xec\xd0\xfa\x67\x17\x9f\xe5\x3f\x73\x7f\x76\xf9\x59\xf0\xef\x0b\x9e\x6f\x78\x3e\xf1\xf9\xac\xe7\x1e\xcf\x4d\x5f\x14\xbf\x28\x7c\x91\xf3\xe2\xda\x1f\xe7\x5f\xe9\x8e\x5c\xf9\x96\xf1\x98\xe0\xd1\x9b\xdf\x3c\x3b\x4a\x3b\xea\xfa\x1b\xca\x37\x1f\xbe\x91\x38\xea\xf9\xc8\x79\xa3\x42\x46\x19\x8e\x2a\x18\xf9\xf6\xc8\x3f\x47\x3c\x19\xf1\xe7\x88\x73\x23\x66\x8d\xf8\x55\xf4\x8b\x2b\x62\xad\xd8\x28\xdc\xc5\x72\x61\x22\xc6\x89\xf5\xc2\x46\x18\x88\xfd\xc2\x5b\x6c\x15\x5b\xc5\x02\xb1\x4e\x58\x08\x63\xb1\x4e\x18\x8b\xef\xc4\x11\xe1\x25\x8e\x08\x33\x61\x2d\xb6\x89\x2d\x62\xb7\x58\x23\x16\x8a\x70\xb1\x41\xac\x14\xce\x62\xa5\x58\x2d\x36\x4a\x3d\xab\xc5\x5a\xe1\x2b\x96\x0a\x2b\x31\x57\xbc\x27\x56\x88\xb5\xe2\x1b\x91\x20\x9c\x85\x9d\xd8\x21\xe6\x8a\x89\x62\x97\x58\x2f\x76\x09\x0b\xb1\x5c\xfa\xae\x89\x58\x2f\xf6\x89\x1d\xc2\x45\xcc\x14\x6b\x84\x89\xf0\x12\x9f\x0b\x33\xb1\x4e\x7c\x24\x0c\xc5\x4a\x71\x48\x9c\x16\x9b\x84\xa1\x88\x12\x86\x62\x89\x58\x2b\x5c\xc5\x22\xb1\x48\xac\x16\xae\xc2\x54\xac\x16\xeb\x85\x8f\xb0\x14\x1f\x88\xd5\x62\x8c\x30\x10\xbb\xc4\x0e\x61\x2a\x16\x89\x0d\x62\x82\x58\x24\x16\x8b\x8d\xe2\x98\xd8\x28\xf6\x0a\x03\x61\x20\x56\x89\x55\xe2\xa4\xf8\x4a\x58\x88\xa5\x62\xa5\xd8\x22\xcc\x84\x8b\xd8\x24\x16\x0b\x43\x11\x2a\x42\x85\xbb\xd8\x2d\x0e\x89\x4d\x62\xae\xb0\x17\xfb\x85\xa1\xd0\x13\x9b\x84\x9d\x30\x15\xeb\xc5\x0a\x61\x26\x6c\xc4\x5c\x31\x4f\x4c\x13\x13\xc5\x7b\x62\xb4\xe8\x65\x80\x71\x62\xae\x18\xe2\x16\x7f\x30\x4e\x4c\x13\x33\xc5\x44\xf1\xb1\x98\x21\xde\x13\x4f\x79\xce\x5d\x9e\xf2\x96\x98\x2a\x66\x88\x57\x7c\x22\xd6\x88\xeb\xdc\xa5\x87\x06\xba\x19\x21\xde\x12\xfd\x3c\xe1\x39\x53\xc4\x14\x31\x43\x18\x8a\x15\x62\xb5\xf8\x48\x4c\x13\x77\x78\x43\x2c\x15\x93\xc4\x58\x71\x15\x3d\x31\x5b\xdc\xa1\x9e\x4a\xee\xa0\xa1\x96\xdb\x0c\xd0\xc4\x25\x86\xa8\x67\x98\xeb\xd4\xf0\x98\x3e\xae\x30\xc8\x0b\x26\x8a\x05\x42\x4f\xbc\x27\x26\x88\x4e\x7a\x79\xca\xaf\x4c\x10\x33\xc5\x04\xf1\x90\xa7\x78\x89\x8f\xc4\x3b\x62\x86\x78\xc0\xaf\x5c\xa0\x9f\x01\xe9\xdf\x1d\xa4\x93\x47\x2e\x0d\x4c\x12\x55\xb4\x52\x8e\x9c\x3f\xb9\x89\x8a\x76\xee\x73\x93\xbb\xf4\xd3\x4c\x35\x8f\xe9\x22\x9e\x3b\xb4\x73\x93\x4e\x9a\x69\xa3\x99\x31\xe2\x26\x3a\xe2\x37\x9a\x19\xa4\x93\x89\x42\x47\x3c\xa4\x17\x1d\x71\x1b\x19\xad\xdc\x40\x43\x25\x6f\x89\x3e\x06\xb9\x44\x05\xa9\xb4\x91\x4e\x18\x91\x44\xd2\x44\x2b\x03\x74\x93\x42\x0a\xbd\xbc\xa0\x89\x5b\x92\xaa\x0a\xf2\x28\xe7\x12\xbd\x54\xf1\x5a\x4d\x34\x6a\x5a\x91\xa3\x26\x8b\x2c\x62\x69\x20\x8b\xe3\x94\x20\x47\x45\x03\x99\x64\xd1\x45\x39\xe1\xc4\xd2\xc8\x05\xda\xe9\xa0\x99\x9b\xdc\xa3\x01\x15\xe3\x45\x33\x89\xdc\xe6\x3e\xe3\x45\x13\xb5\x64\xd2\x84\x86\x7a\x94\x94\x52\xcf\x4d\x6e\x73\x8f\x99\xa2\x86\x5e\xee\x52\x49\x1b\x8d\x5c\xa7\x80\x4b\x68\x69\xe3\x2e\x8d\x28\xc8\x23\x8f\x6e\xd2\x48\xe3\x12\x6a\x1a\x29\xa2\x95\x5b\xa4\xd3\x4e\x0f\xf7\xb9\x20\x8d\xd9\xc2\x35\xee\x53\x46\x39\xe5\x24\xd1\xce\x3d\x2e\xd0\x4c\x3b\x55\xa8\x69\x96\x74\x68\x50\x53\xcb\x4d\x32\x89\x24\x49\xf2\x24\x0e\x19\x39\xd4\xd3\x49\x81\xe4\x63\x05\x55\x1c\xe4\x04\x35\xc4\x10\x49\x20\x89\xa4\x92\x43\x3c\x47\x69\x23\x91\x3d\xe4\x10\x43\x1d\x35\x0c\x50\x41\x2b\x0a\xd4\x54\x30\x40\x1d\x55\x34\x92\x47\x0d\x2d\x24\x33\x40\x0a\xc9\xdc\xa2\x0a\xb9\xf4\x86\x96\x1e\x9e\x72\x95\x72\xc6\x8a\xa7\x74\xd0\x42\x1a\x67\x49\x43\x2e\x79\xa7\xa1\x9c\x12\x4a\xa8\x27\x87\x70\x92\xc8\xa1\x96\x76\x72\x49\x44\x8e\x06\x15\xf1\x9c\x41\x46\xbc\xe4\x71\x3c\x69\xc8\x50\x22\x43\x25\x29\xeb\x43\x46\x08\xa5\x5c\xa1\x9b\x38\x32\x28\x42\x46\x36\xe9\x34\x4b\x77\x15\xa4\x90\x48\x38\x75\xb4\x72\x89\x46\xea\xb9\x8d\x96\x3a\x26\x88\x21\x5e\x53\x78\x09\x05\xbd\x5c\xa2\x95\x6e\xea\x24\x8d\x1d\x5c\xa0\x97\x6e\x64\x34\xd2\x43\x23\x0f\x50\x53\x25\xf9\xa9\x22\x82\x0a\x4a\x38\x29\x69\x4f\x96\xce\xb9\x54\x11\x4a\x12\x81\x24\x71\x81\x64\xa2\x88\x20\x82\x32\x1a\x68\x21\x95\x0b\xf4\x51\x85\x8c\x5c\x92\x48\x95\xe2\x48\xe3\x4b\xe2\x49\x25\x93\x4a\xc9\xed\x28\x3a\x89\x21\x93\x52\x4a\xe8\x97\x28\x7f\x1d\x59\x3d\x65\xc4\xe1\x4b\x24\xb9\x68\xc8\x90\xe2\x8c\x27\x87\x4a\x8a\x28\x22\x86\x02\x0a\xa8\xa7\x89\x26\x3a\xa5\x39\x78\xc1\x0d\x0a\xc8\xa6\x92\x3e\x6e\x31\xc8\x0d\xae\x30\xcc\x30\x6d\xf4\x48\xac\x67\x93\x47\x1a\xad\x54\x70\x9d\x01\x1a\x79\x4a\x23\xd5\xe4\x91\xc0\x05\xaa\xe9\x22\x0b\x2d\x72\x5a\x78\x40\x27\x6a\x92\xe9\x20\x89\x72\xda\x69\x46\x4d\x19\x39\x04\x49\x9e\x67\x22\xa3\x96\x33\x1c\x45\x43\x17\xe1\x64\xa2\x22\x46\x52\x95\x21\x91\x5c\x4a\x19\xb5\x28\x39\x4d\xa7\xe4\xb9\x92\x18\x62\xf0\xe7\x34\x39\x94\x92\x48\x29\x75\x34\x31\x48\x24\x35\x5c\xa1\x8d\xd1\xe2\x14\x3e\x24\x60\x4f\x81\xd4\xd3\x4a\x11\xb1\xc4\x72\x8a\x04\xf2\x68\xa3\x0e\x39\xe9\xd8\xa2\x40\x2b\x3d\x3b\x45\x30\xb1\x84\x12\x4c\x15\x41\x9c\xa4\x95\x04\xd2\x48\x22\x94\x34\x16\x90\x40\x0b\x41\x9c\x91\x08\x89\xa6\x8a\x58\xb2\xa4\xde\x06\x69\x66\x72\xc9\x24\x93\x72\x3a\x91\x71\x96\x10\x72\xc8\x94\x66\xed\x18\xbe\x94\xa1\x24\x5c\x62\x3b\x04\x19\xe1\xc4\x90\x4a\xca\xff\xd2\x13\x2e\xc5\x96\x41\xa0\xe4\x76\x0d\xa5\x64\x53\x41\x07\xa5\x14\xa1\xa5\x9a\x6a\xea\x68\xa1\x82\x46\xd2\x09\xe2\x18\x72\xea\x08\x23\x9d\x56\x3a\x90\x53\x42\x92\x74\x2e\xe1\x9a\xa4\x28\x0a\x15\xb5\x74\x70\x16\x5f\x1a\xa4\x6c\x6d\xa7\x9c\xab\x94\x11\x28\x29\x0f\x95\xf2\x4f\x49\x19\x19\x54\x92\x4b\x20\x21\x24\x91\x49\x3d\xfd\x74\x52\x29\x3d\x8b\x20\x4e\x62\x5a\x43\x29\xa9\x64\x93\x41\x19\x45\x94\x92\xc3\x51\x0a\x24\xde\x53\x48\x20\x85\x53\x28\x50\x50\x43\x0a\x79\x14\x60\x45\x1a\x35\x92\xe6\xd7\xde\x06\x90\x4e\x32\xa7\x69\xa4\x9c\x2e\x22\x88\x26\x9a\x40\x29\x82\xd7\x2c\x07\x49\x39\x7b\x96\xb3\x54\x53\x49\x34\x69\xb4\x70\x8a\x58\x5a\xe8\x42\x4e\x19\x57\xe8\xa0\x8f\x5a\xc2\xf1\x42\x83\x92\x48\x2a\xc9\xa1\x99\x18\x82\xa5\xf1\x12\xf1\x97\xea\x47\x14\x71\x54\x92\x4d\x9d\x74\x54\xf3\x2b\xbd\x64\x30\x55\x54\xa3\x25\x85\xfd\x52\x3d\xeb\xa0\x5c\xaa\x1a\x25\xc4\x72\x46\xaa\xa4\x59\x52\x06\x1d\x23\x9a\x2c\x92\x29\x27\x8b\x70\x42\x49\xa7\x0f\x0d\x0d\x34\x93\x4a\x38\x67\x38\x49\x2e\xa9\x1c\xa4\x96\x32\x9a\x89\x22\x89\x36\xb2\x69\x20\x00\x0d\x45\xc4\x93\x4d\x1c\xa9\x14\x10\x47\x30\x61\x14\x90\x4c\x3a\x89\xc4\x92\xc0\x09\xd2\x48\x20\x9b\xd3\xf8\x93\x4e\x3a\x09\x52\x26\x64\xd1\xcf\x35\xb2\x49\xa6\x16\x39\x0d\x54\x4b\xcc\xbc\xce\xef\x50\xa2\x89\xe2\x0c\x0d\x94\x53\x4f\x3c\x67\x89\xc0\x95\x44\x32\xb9\x4a\x3d\x0d\x74\x4a\xdc\xcb\x38\x4a\x2a\x9d\x28\xc9\x21\x83\x38\x34\xb4\x12\x87\x3f\x01\x9c\x20\x8e\x22\xf6\xb0\x13\x1f\x4e\x13\x2a\xed\x09\xec\x24\x96\x13\x98\xe2\x46\x2c\xd1\x04\x71\x16\x3f\xbe\x24\x98\xe3\x78\xe2\x45\x28\x5a\xca\xa5\xea\xf2\xfa\xc8\x23\x8a\x34\xa2\xc8\x94\x7c\xa9\x22\x5e\xaa\x8b\xbe\x34\x4b\xd5\x65\x94\xc8\x25\x9e\x10\x0e\xa2\x94\xde\xa9\xe4\xa8\x44\x6b\xbc\xb4\x3a\x94\x4a\x2e\xb4\xa1\x91\x78\x38\x21\xad\xad\xd9\x54\xa3\x26\x8f\x6a\x4e\x51\x4e\xba\xe4\x6d\x28\x09\x92\xdb\x87\x39\x8e\xb7\x14\x75\x12\x67\x89\xe6\x24\xb6\x78\x12\x8e\x8c\xc3\x1c\x26\x93\x68\xf6\xb1\x9d\xb5\x38\xe2\x8d\x13\x07\xf1\x22\x8d\x5d\xec\x25\x86\x24\x8e\xe1\x41\x24\x07\xd9\x47\x20\x31\x84\x11\xc2\x5e\x7c\x31\xc7\x8e\x04\x3c\x88\x21\x85\x30\xe2\xb0\x27\x9c\x00\x12\x38\x8e\x2f\x1e\x38\xe3\xcf\x36\x7c\x48\xe4\x38\xfe\x38\xb3\x07\x4f\x8e\x12\x40\x18\x3e\xd8\xb1\x9f\x68\xc2\x08\xc2\x0f\x77\x4e\xe3\x87\x33\x59\xa4\xe3\x84\xb7\x34\xfb\x99\xec\x93\x46\x75\x25\x82\x50\xf6\x91\xc5\x55\x89\x10\x35\x49\x64\xa0\xa2\x84\x4a\x52\x89\x91\x56\x04\x5f\xbe\x60\x2f\xa9\xdc\x44\x4b\x06\x1e\x14\x11\x45\x0a\x1e\xd2\x55\xb0\x54\x5b\xaa\x25\x6f\x22\x71\xe3\xb8\xc4\x7a\x30\xd1\x5c\x27\x4d\xe2\xc6\x8f\x60\xe4\x24\x13\x4a\x04\xfb\x38\x2e\x91\x99\x4b\x30\xbb\xb0\x63\x3b\x7b\x39\x43\x10\x41\x64\x71\x06\x5f\xb6\xb0\x8f\x32\xa2\x08\x24\x8d\xc3\xf8\xb2\x97\x10\xbc\xd8\x8e\x39\xe6\x7c\x2e\xfd\x2e\x67\x3b\xf1\x78\xe0\xc3\x51\x12\x39\x88\x2f\x8e\xb8\x12\xc8\x36\x4c\xd9\xcc\x36\xec\xf1\x27\x0e\x17\xec\xf1\xe1\x2f\xec\xc4\x1b\x1f\x4e\xb0\x13\x7b\xf4\x58\xca\x12\x3e\xc4\x14\x73\xa6\xb3\x04\x53\x9c\x31\x62\x29\xab\x59\xcd\x42\xde\x67\x11\x0b\xb1\xc3\x0a\x2b\x8e\xe3\x8e\x1d\x2b\xf0\xe3\x04\x4b\x70\x64\x3f\xb1\x6c\xc0\x96\x74\x8c\xd8\x8e\x37\x7e\x04\x61\xcb\x5a\x16\xb2\x02\x6f\x8c\xb1\x45\x1f\x4f\x16\xf0\x3e\xdb\x31\x66\x03\x8e\x98\xb0\x9d\xed\x6c\xe4\xee\xb0\x0e\x1d\xc3\x8d\xc3\x87\x0f\xfa\x1c\x58\xc3\x7f\x5a\xac\x23\xfc\xdf\x7b\xa4\x7d\xb3\xff\xdf\xbe\x18\xf3\x9f\xeb\xff\x0e\x00\x00\xff\xff\x15\x00\x54\xd7\x6c\x13\x00\x00")

func assetsBeepWavBytes() ([]byte, error) {
	return bindataRead(
		_assetsBeepWav,
		"assets/beep.wav",
	)
}

func assetsBeepWav() (*asset, error) {
	bytes, err := assetsBeepWavBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/beep.wav", size: 4972, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsBlinkyRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x55\x5f\x68\xdb\xde\x15\x3e\x96\x7d\x1d\x23\x1c\xcb\x3f\xd9\xb2\xdd\x3c\x04\x6f\xcd\xe6\x74\x63\x9d\xe2\x38\xa1\x1b\x25\x55\x6d\x36\xca\x18\xb3\x19\xc9\x9e\x5d\x27\x6a\x9a\xfd\x11\x6e\x6b\x87\xe2\x24\xe5\xca\x4e\xab\x6d\x8c\x10\x46\xf3\xd0\xb0\x87\x66\x6c\xc3\x23\x2f\x21\x24\x7b\x28\x63\x64\xd0\x8c\x50\x3a\x16\x8a\x12\x46\xf0\x83\x6b\xa7\x65\x8c\xd5\xd8\xed\xb2\x75\x50\x94\x71\xaf\x64\xa7\xde\xa8\xa4\x7b\x75\xce\x77\xbe\x73\xcf\xb9\x5f\x6e\x64\xbe\x2f\x7a\x51\x14\xc3\x89\x8b\xe1\x6f\x4c\xcb\x19\xf9\xf6\x74\x78\xe8\xd2\x57\x2f\x7d\x25\xf2\xb5\x21\x6c\x57\x7d\xe5\xbd\xd6\x44\x1a\x95\x9f\x37\x27\xb4\x3b\x0f\x26\x23\xb7\xa1\x1a\x79\xa8\x48\x5a\x4d\x89\x68\x2f\x6f\xf6\xcd\xb8\xbf\x7f\xe9\x07\xf0\x43\xe6\x47\x7d\x91\x54\xf9\xcd\xd1\x56\x45\x3f\xbf\x3f\x06\xfc\x7c\xf9\x79\x53\xbe\x0f\x4f\x4f\x17\xbf\x3b\xf0\x2f\x32\x7f\xb1\x3f\x6d\xab\xae\x45\x0e\x47\xff\xcd\x7f\x67\x29\x3d\x58\x50\xa6\x06\x0b\x91\x43\xfe\x4b\xcd\x1e\x09\x7c\x5e\x8c\xb1\x53\x7d\xac\x3a\xb1\x20\x01\xbf\x2a\xd9\xf8\x55\xe9\x94\x5f\xe5\xf7\xf0\x32\x76\xaa\x1b\x16\xbe\x29\xd9\xf8\x4d\xe9\x94\xdf\xe4\xf7\x48\x25\x52\xf7\x68\x4b\x79\xa7\xd5\x14\x87\xf6\x52\x89\x0e\x16\xe8\x2a\x3b\x16\xbb\x2a\xd9\xf8\xaa\x74\xca\x57\xf9\x71\xba\xca\xbe\x85\xbf\x97\x6c\xfc\x7b\xe9\x94\x7f\xcf\x8f\x97\xdf\x54\x74\xd2\x79\x45\x57\xfe\xa2\xd5\x94\xb0\xf6\x52\x39\x37\x58\xe0\xc7\xd3\x57\x06\xcb\xed\xdd\x28\x92\x56\xc7\x59\x5c\x13\x81\x8f\x92\xbe\x07\x7f\x0a\xd5\x1b\x9f\x4d\xb3\xe5\x67\x91\xd7\x37\x3e\x9b\xf6\x96\xf7\x22\xaf\xa7\x40\x76\xdd\x80\x69\x6e\xfd\x9c\x3e\xb3\xfe\xf9\x83\x99\xb4\x7d\xb0\x3c\x06\xbe\x3f\xb5\xfd\x1c\x93\x67\x62\xa2\xef\xda\xa7\xe2\xb3\xcc\x68\xc0\x77\xf3\x93\xd9\x46\xde\x88\x81\xef\xc1\x27\xb3\x8d\x51\xf0\xfd\xc6\x77\x8d\xd8\xeb\x5f\x3e\x98\xe1\xfb\x4a\x59\xc5\x5e\xaa\x2d\xe2\xfb\xcb\x8a\xb3\xb1\xe6\x8f\x2a\xf6\xc6\x9a\xff\x5b\x8a\xab\xb1\xe6\xcf\x28\x3d\x8d\x35\x7f\x21\x61\xcf\x33\x09\xc8\x1b\x09\x26\xc7\x24\x6c\x39\x03\x4b\x6a\x2a\xf2\xa4\x08\x8a\x8b\xec\xd4\xff\x73\xa5\x07\x87\x8b\xb5\x38\xf2\xaf\xc6\x9d\xfe\xcd\x78\x8f\xff\x1f\x91\x94\xf2\x41\xab\x69\x43\x3f\x96\x7e\x92\x0a\xa6\x08\xff\x16\x73\x96\xe1\x7b\x3b\x69\xcf\x33\x7e\x0f\xc5\x8d\x2e\x1c\xf2\x86\x89\x67\xbb\xf9\x4c\xce\xe2\x67\xbb\xf9\xb6\x9c\xe1\xf7\x44\x52\x7f\x7d\xb8\xd4\x84\x86\xd2\xc4\x35\x3c\xd4\x9c\x28\xb7\xf4\xf1\x59\xdb\x75\x44\x4e\x4b\x2b\xe4\x1f\xe8\xe0\x27\xfa\xf8\xac\x03\x3f\x56\x37\x22\x4f\x08\x26\x82\xff\x85\xe2\xd6\xea\x78\x47\xdd\xef\x20\xc7\x8a\xa8\xd5\xd3\xa7\xcd\x50\x53\xf0\x0f\x24\x6c\x53\x5f\x4f\x30\x53\xe0\x1f\x28\x66\x4b\x59\xc5\x5d\xac\x99\xd9\xe5\x37\x26\x5b\x18\x38\xda\x8a\xbb\xe7\x98\x38\xcc\x19\x71\x57\x81\x89\x3b\x0a\xc6\xd1\x16\x34\x14\xdc\xea\x19\x02\x41\x8f\x81\xa0\xab\x50\xf2\x5c\x01\xe1\x7b\xa5\xe5\xd2\x76\x12\x84\x9f\x0d\x83\x90\xd3\xea\x25\x5c\xfa\x75\x12\x84\xdf\x0f\x83\xf0\x2b\xad\x2e\xe8\xdd\x7e\x37\x57\xd0\x27\x25\x35\x7a\x15\x04\xfd\x68\x6b\x8e\x31\x4f\x71\xc6\xad\x7d\x0e\x1a\x93\xde\x0e\x6e\x58\x38\x50\x3c\xdc\xc6\x0b\x6d\xbe\x8b\xe2\xb8\x83\xb7\xf9\x0e\x82\xff\xb1\x89\x79\x11\x84\x63\xa2\x46\xb1\x2e\x78\x8e\xb6\xb0\x27\x09\xc2\xdb\x8c\xa3\x60\x04\xfc\xd4\x36\x32\xee\x39\xc6\xb4\x03\x6c\xc6\x55\xb0\x6c\xa1\x92\x81\x76\x6d\xb2\x12\xd5\x49\x2c\xd6\x4c\x4d\xdb\x3a\x05\xbe\x5d\xd1\xe3\xe2\x02\x13\x87\x05\x23\x1e\x9e\x67\xe2\xde\x79\xa3\xa2\xb7\x75\x0a\x3a\x62\x10\x74\x10\x9d\x92\x10\xb8\x57\x5a\x2e\x1d\x24\x21\xf0\xbb\x61\x08\xfc\x82\xea\xb4\x9b\x84\xc0\xdf\x87\x21\xb0\xaf\xd5\x83\x8e\x6e\xbf\x9b\x1b\x74\x98\x3a\x05\x1d\x15\x7d\x81\xa9\xe8\x5a\x9d\xfc\xa7\x66\xc4\x33\xa5\x68\xc4\xe8\x44\x3e\xd2\x8a\x44\xe6\xcf\x72\xc2\x67\x6a\xd1\xc8\x59\x8e\xf7\x4c\xaf\x60\x40\xab\x93\xd3\x52\xac\x07\x46\x2b\x3a\x51\x23\x38\x90\x59\x9e\x37\x82\xdf\xa4\xb6\x98\x11\x17\x18\xcb\xbe\x9c\x79\x3c\xdf\xb6\xdd\x19\x20\x3d\x28\x49\x53\x31\x9c\x55\xec\xb8\x86\x3d\x2a\x56\x1f\x2a\x8c\x5a\xbb\x0a\x59\x1b\xf6\x60\x4f\xf9\xcf\xcd\x7e\xeb\x5c\xc3\x6f\xcf\x19\xfd\xe6\xfd\x4e\x5e\x8f\x75\xec\x89\x7b\xb6\x31\x1c\xcc\x41\xa3\x78\xbe\x34\xac\x70\x38\xac\x8a\x91\x3f\x90\xb5\xca\xff\x69\xf6\xbf\x88\xde\x66\xa2\x52\x70\xb5\x78\xfe\x0e\x93\x08\x43\x23\xb8\x9a\x65\x6e\x31\xd8\xa9\x3a\x55\x8f\x79\xaf\xc7\x5a\xfd\xad\xfe\x66\x7f\x53\x86\x06\xf9\x02\x63\x67\x73\x82\x7c\x77\x83\x55\x68\xb4\x64\xc5\xb6\x98\x28\x42\xc9\x2b\x7b\x4b\x13\x49\x28\xbe\x4a\x42\xc8\x2d\x47\x8a\x13\xe4\x4d\x2a\x2d\x1e\x07\x9b\xff\xbc\x70\x98\x9f\x75\x5a\xbc\xbf\x75\x78\x31\xd9\x4e\x79\x31\x93\x17\x0a\x75\xf1\xa6\x3a\xbc\x71\x2b\x2e\x75\xc5\x59\x12\x0f\x29\x34\x92\x36\x23\xad\x0b\x87\x79\x68\x94\xf7\x5a\xb2\x7a\x7c\x05\xb2\x36\xf2\x2b\x43\xfc\x77\xf2\x12\x2c\x7d\x21\x09\xd0\x18\x83\xd0\x2f\x97\xbc\x4b\x23\xc4\x2e\x3f\x23\xd1\xa5\x7a\x86\x9b\x3c\xbd\xee\xad\xad\x85\x9e\xaa\xb1\x21\x08\x6d\x5c\xf7\xe2\x98\x08\xa1\x0d\x68\x28\x36\x68\x00\x00\x20\x48\x65\xc3\x74\xa4\xc5\x34\x1d\x62\x5a\xa4\x23\x9c\x4d\x59\x23\x0b\x10\x86\xee\x0b\xd3\x79\x87\x58\x18\x60\x07\x63\xbc\x03\x18\xdc\xae\xae\xab\xf7\x7f\x7d\x56\x46\x08\xa1\x57\xf4\x41\x68\x97\xfd\x3f\x1f\xb9\x5d\x2e\x0e\xb9\x7b\x11\x61\x23\x0f\xd7\xed\xb3\x2c\x62\x65\x27\x5a\x61\xd9\x11\xc2\x1e\x41\x68\x85\xac\x40\x7d\xe7\x2e\x4b\xe2\x1c\xa2\x95\xdc\x2e\xcb\x20\x2f\xb7\x69\x70\x88\x65\xf3\x68\xdb\xac\x24\xa3\x6d\xb3\xee\x36\x75\x10\x42\xdb\xe8\xc0\xac\x4f\x2a\x91\xc2\x1c\xa2\xd9\xa6\x63\xd6\xe7\x10\x27\xd3\xca\xaf\x48\xe1\x0d\x44\xb3\x4d\x07\xed\x72\x88\xeb\xc9\xa1\x03\x17\x47\xfa\x76\x75\x92\xac\x75\xb8\x3c\xd2\x7b\x58\x44\x9a\x3e\x21\x79\xe8\x80\xea\xc3\xe5\xa9\x73\x42\x76\x41\xfa\xa7\x29\x24\xb3\x77\xc4\xd4\x67\xc5\xdd\x86\xcc\xfe\xc9\x3e\x5d\xed\xad\x71\x1d\x93\xe8\x42\xfb\xef\xa5\x25\xa8\xa2\x27\xf4\xa1\xd2\xae\x98\x11\x16\x9d\xe9\xe2\xa6\xad\x99\xd2\x5a\x8b\x51\x5d\xa9\x40\x96\xa8\xd6\x6c\xca\x83\x56\xd8\x8f\xff\x98\xdc\x47\x73\x1b\xba\x1c\x7f\xf4\x28\x7e\xd9\xe6\xe5\xee\x2e\x46\xa3\x8b\x77\xc1\x5b\xbd\xfb\xc1\x30\xa8\xf1\xdf\x00\x00\x00\xff\xff\x90\x7e\x30\x9d\x34\x09\x00\x00")

func assetsBlinkyRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsBlinkyRom,
		"assets/blinky.rom",
	)
}

func assetsBlinkyRom() (*asset, error) {
	bytes, err := assetsBlinkyRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/blinky.rom", size: 2356, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsBlitzRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x12\x12\x77\xf2\xf1\x0c\x89\x52\x70\xaa\x54\x70\x49\x2c\xcb\x4c\x51\x08\xf7\xf4\x0b\x71\x0d\x5a\xec\x98\xc0\x92\xc8\x99\xc4\x97\xce\x72\x41\xee\x93\x5c\x01\x8f\x81\x83\x90\xe2\x07\x2e\x86\x07\x4a\x37\x41\x64\x5f\xc1\x62\xb9\x6c\xf9\x33\xf2\x3d\x47\xee\x6c\xb2\x67\x14\xf2\xbc\xb3\x49\xc8\xf2\x14\x7b\x15\x63\xf5\xbf\x3b\x9b\xaa\xfe\x5b\x31\x08\xf9\xd6\xfd\xb7\x63\x10\xb2\xcc\x66\xe8\x29\xc8\x65\xc8\x63\x58\x2c\x7d\xf7\xb1\x3d\x83\xd0\x41\x6b\x06\xa1\xc6\x04\xd6\x07\xf3\x84\xda\xb3\x19\x3b\x2e\x54\x30\x75\x3e\xa8\x64\x5e\x2c\x77\x63\x62\xe3\x87\x04\xd6\x0f\xa2\x1f\xd8\x0d\x18\x84\xba\xad\x19\x85\x56\x2f\x96\x33\x64\xbc\x31\xb1\x92\xd1\x52\x41\x68\x75\x36\x83\x21\x43\xcd\x7f\x1f\x06\xa1\xdd\x20\x53\x6a\x99\x6c\x1d\x84\x76\xe6\x32\xd4\x31\x0a\xa5\x32\x3c\x28\x67\x12\xd2\x05\x89\x26\x88\x24\x32\x25\x71\x2f\x56\xb8\x20\xfd\x49\xae\x80\xc3\x40\x47\xe8\xac\xd0\xf5\x04\xae\x44\xde\x24\xd6\xc5\xec\x17\x44\xc1\x62\x5a\x42\x0f\x1b\x0a\x0a\xfe\x35\xb0\x2d\x6e\xff\x60\xfc\x29\x35\x41\xf7\xa3\x66\x22\xef\x05\xd1\x02\xd6\x4f\x9a\x17\x44\x19\xde\x35\x37\x35\x37\xfd\x7e\xc1\xd1\xc1\xfa\x68\xdf\x82\x1d\x0a\x76\x0d\x0d\x0d\x0d\x3f\x1a\x7e\xfc\x39\x70\xe0\x67\xe3\xed\xd3\xbf\x19\x7e\x75\xcd\x9a\xf9\xe3\xbd\xd6\x0b\x4d\x4d\x86\xfc\x0c\x3d\x9f\xfe\x7d\x0b\x76\x6c\xd8\xc7\xb0\x4f\xc9\xce\x64\xd3\x8d\x1b\x0c\x87\x0f\x33\xc0\xc8\x03\x07\x18\xe0\xe8\xf6\xed\xdb\xb7\x19\x24\x24\xa0\x08\x95\x27\x21\x71\xfb\x36\x03\x33\x33\x88\x09\x56\x09\x08\x00\x00\xff\xff\x08\xc8\x06\xd1\x87\x01\x00\x00")

func assetsBlitzRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsBlitzRom,
		"assets/blitz.rom",
	)
}

func assetsBlitzRom() (*asset, error) {
	bytes, err := assetsBlitzRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/blitz.rom", size: 391, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsBreakoutRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xca\x4f\x4b\x02\x41\x18\xc7\xf1\x67\xa6\xd5\x3c\x88\xe5\x43\x82\xa7\x56\xbc\x79\x13\x0a\x82\x82\xc6\x8b\x7f\x5e\xc6\xb3\x94\xb4\xdb\x3f\x94\x10\xa4\x24\xe6\x10\x4a\xd0\xb1\x37\x20\x73\x5b\xba\xf4\x22\xea\xd0\x69\x45\xf0\x10\x22\x7b\xec\x24\x93\xd0\x9e\x64\x27\xd6\xdf\xe1\x73\xf9\x7d\x6f\x53\x6d\xb8\x4a\x5f\x82\xca\x7e\xbf\xdf\x5b\xc7\x35\xcc\x3c\xf0\x13\xc4\xf4\x75\xe9\xc6\x56\xbb\xf3\x49\x39\x22\x70\x40\x61\x90\xef\x64\x54\x2e\xc8\x53\x4d\x17\xf4\x76\x15\xf0\xf0\x73\xe7\x62\xdf\x65\x9e\x51\xb9\x59\x37\x29\xc9\x0a\xc7\x83\x98\xd2\xe1\x78\xc0\x49\xbc\xf0\xf9\x24\x79\x86\x4f\xa3\x57\x12\x43\xee\xd8\x23\x6c\xda\xf8\xd6\x00\x97\x35\x84\x6b\x9a\xe0\xb1\x59\x57\x30\xf4\x9b\x36\xfa\x94\x92\x3d\x01\xe8\x13\xd3\x45\x49\xce\x5a\xa2\xca\x06\x5d\x8a\x9f\xb7\xca\x51\x8f\x95\xa3\x3a\xe1\x02\x1b\x9e\x91\x24\x3f\x04\xc3\x2f\x87\xcb\x82\x60\x18\x6e\x5c\x6e\xfc\xa1\x92\x2e\xaa\xdc\xa3\x91\xa1\xb4\x1c\x08\xf2\xa7\x80\x55\x5c\xf4\x4d\x2b\x76\x0d\x2e\xfb\xac\xc5\x5d\x46\x96\x2e\x7a\x06\x3b\x6a\xef\xef\x60\xd5\xfe\xad\x9c\x1d\x9d\xc3\xb4\x7e\x97\x5a\x55\xa6\x75\x58\x6a\x90\xb0\x06\x1f\x92\xfd\x07\x00\x00\xff\xff\xf7\xa0\xbc\xa6\x18\x01\x00\x00")

func assetsBreakoutRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsBreakoutRom,
		"assets/breakout.rom",
	)
}

func assetsBreakoutRom() (*asset, error) {
	bytes, err := assetsBreakoutRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/breakout.rom", size: 280, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsBrixRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\xca\xbd\x4a\xc3\x50\x18\xc6\xf1\xf7\x1c\xd3\xda\xa1\x54\xfb\x62\xa1\x93\x29\xdd\xba\x15\x14\x04\x05\x4f\x97\x7e\x5c\xc6\x1b\xb4\x98\xf8\x45\x83\x14\x8a\x16\x39\x83\xb4\x08\x8e\xde\x40\x39\x5b\x70\xf1\x22\x74\x70\x4a\x29\x74\x90\x52\x32\x3a\x85\x58\x30\x53\xc9\x91\xf4\x19\x7e\xcb\xf3\xbf\xcd\x74\xe1\x2a\x7b\x09\x2a\xff\xfd\x7e\x6f\x1c\x37\x30\xf7\xc0\x4f\x10\xb3\xd7\x95\x1b\x53\xed\x2e\xa6\xd5\x98\xc0\x02\x85\x7e\xb1\x97\x53\x05\xbf\x48\x8d\xa8\x14\x6d\xd7\x01\x0f\x3f\x77\x2e\xf6\x6d\xe6\x68\x55\x98\xbb\x69\x49\x46\x30\x19\x26\x94\x0d\x26\x43\x4e\xe2\x85\x2f\xa6\xe9\x33\x7a\x1a\xbf\x92\x18\x71\xcb\x1c\x63\xdb\xc4\xb7\x16\xd8\xac\x25\x6c\xdd\x06\x87\xcd\x5d\xc1\xd0\x6b\x9b\xe8\x51\x46\xf6\x05\xa0\x47\x2c\x2a\x4b\xb2\xd6\x12\x55\xde\x77\x29\x79\xde\xaa\xc6\x7d\x56\x8d\x9b\x84\x4b\x6c\x39\x5a\x92\xfc\x10\x0c\xbf\x2c\x2e\x4b\x82\x61\xb0\x31\xdc\xf8\x43\x95\xa8\xac\x0a\x8f\x5a\x06\xd2\xb0\xc0\x2f\x9e\x02\xd6\x71\x39\xd0\x9d\xc4\xd6\x18\x0e\x58\x87\xdb\x8c\x8c\xa8\xec\x68\xec\xa9\xbd\xbf\x83\x55\xf7\xb7\x76\x76\x74\x0e\xb3\xe6\x5d\x66\x55\x9b\x35\x21\x0c\x40\xc2\x1a\x3c\x48\xf7\x1f\x00\x00\xff\xff\x0b\x4d\xa4\xaa\x18\x01\x00\x00")

func assetsBrixRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsBrixRom,
		"assets/brix.rom",
	)
}

func assetsBrixRom() (*asset, error) {
	bytes, err := assetsBrixRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/brix.rom", size: 280, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConnect4Rom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x12\x92\x72\xf6\xf7\xf3\x73\x75\x0e\x31\x51\x48\xaa\x54\x70\x49\x2c\xcb\x4c\x51\x08\xf7\xf4\x0b\x71\x0d\x5a\xb4\xfb\x5b\xea\xa2\x2d\xdf\x42\x33\x19\x32\x18\xb3\x19\x72\xf9\xf3\xe4\x17\x2d\x4d\xe0\x4d\x34\x4a\x62\xb8\xa0\x7f\x51\xbf\x88\xdf\x48\x4e\xc8\xe4\x82\xe2\x45\xc5\x22\xc6\x04\xae\x45\xf3\x41\xac\x45\xf3\xef\x3e\xfc\xc3\x75\xf7\xa1\x0f\xab\x50\x9d\x0d\x8b\x50\x56\xf5\xff\xda\xdf\xb6\x5c\x42\x55\xd9\x6c\xb9\xba\x42\x55\x36\x6c\x42\x33\xaa\x19\x6b\x59\x6d\x8d\x84\xaa\x40\xe6\xdd\x7d\x28\x14\xb0\x68\xcb\x6f\xb9\x0f\xa9\x0e\x7f\x84\x66\x74\x31\x14\xfc\xfe\x10\xda\xd9\xbc\x68\x9e\x25\xc3\xa2\x85\x77\x97\x80\xcc\x12\x0a\x48\xf8\xf0\x21\x61\xc2\x84\x84\x06\x54\x20\x85\x02\x00\x01\x00\x00\xff\xff\x9b\x88\x58\x98\xc2\x00\x00\x00")

func assetsConnect4RomBytes() ([]byte, error) {
	return bindataRead(
		_assetsConnect4Rom,
		"assets/connect4.rom",
	)
}

func assetsConnect4Rom() (*asset, error) {
	bytes, err := assetsConnect4RomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/connect4.rom", size: 194, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsGuessRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x64\xc8\x63\x64\x78\x90\xcb\x98\xc5\x98\xcd\xd8\x73\xa1\xe7\x91\x0f\x83\x90\x52\xc7\x05\x25\x07\x2b\x07\x21\xa5\x2c\xc6\x6a\x36\x1b\xfb\x5a\x46\x5b\x7b\x21\x9e\x0f\x5c\x0e\xac\x9d\x4f\xfa\x9e\xd8\x39\x08\xb1\x64\xc9\x64\xf3\x76\x4c\x60\x78\xa0\xe4\x20\x64\xb7\x68\xda\x0f\xe3\x4f\xa9\x4a\x61\xb7\xb6\x56\xb1\x34\x2a\x80\x69\x56\x86\x77\xcd\x02\xcd\x26\xcd\x26\xcd\x22\x8b\x52\x3e\xcb\x31\xbc\x7b\xb0\x60\xc1\x82\x07\x0e\x20\xf0\x40\xe1\x41\xc3\x83\x07\x0a\x0f\x14\x1e\x2c\x58\xf0\x40\x01\xc4\x51\x78\xf0\xa0\xe1\xc1\x82\x07\x0f\x14\x14\x14\x14\x1e\x2c\x00\xb1\x16\x3c\x50\x78\x00\x08\x00\x00\xff\xff\xcb\xce\x01\x05\x96\x00\x00\x00")

func assetsGuessRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsGuessRom,
		"assets/guess.rom",
	)
}

func assetsGuessRom() (*asset, error) {
	bytes, err := assetsGuessRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/guess.rom", size: 150, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsHiddenRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xdf\x6b\xdb\x56\x14\xc7\x8f\x1c\x25\xd1\x9c\xb4\x11\xba\x31\xeb\x18\x53\xe5\xca\x03\x97\xc2\xe4\xd2\x6e\x0c\x6c\x88\x3a\x5c\x48\xd9\x1a\x5a\x33\xb1\x27\x81\xe4\x54\x81\x85\xad\x38\x0c\x1a\x06\x4e\x90\x15\x8f\xd8\x0e\xc4\x71\xc8\xd8\xf6\xb2\x75\xec\x1a\x86\xb6\x3f\xa0\x2d\x7b\xa8\xf7\x20\xba\xb1\x1f\xda\x43\xdc\x87\x62\xea\x76\x0f\x7e\x53\xae\x1d\x18\x59\x5a\xa4\x21\x27\x83\xb1\xcf\x81\x73\xef\xfd\x9e\x73\xcf\xfd\x5e\xee\x95\xd9\x2b\xd9\xec\xe5\xb9\xb8\x70\xfe\xb5\x94\xf0\xd6\xc7\x42\x56\xbf\xf5\xfe\x0d\xe1\xbd\x2b\x73\xef\x5e\xce\xe1\x19\x0d\x74\xb9\xaf\x84\x2b\x51\xa0\x8b\x57\xb5\x49\x9d\xc9\x4f\xb9\xa7\x0b\xcc\x80\x4f\x5d\xe4\x5e\x27\x51\xe8\xe2\x9f\x34\xa4\x9f\xc8\xd3\xee\xf4\x50\x3d\xc7\xbd\x8d\x4f\x07\x06\x96\x02\x65\x5e\x5e\x60\x5a\x53\x3f\x4e\x61\xa9\xcf\x13\xa3\x0c\x58\x1a\xf0\xc4\xf8\x04\x4c\x99\x28\xa1\x66\x5e\x23\xca\x47\xc1\x05\xe0\x74\xe8\x6a\xa0\x03\x5e\x76\x5f\x2c\x30\x29\x81\xab\x6b\xb0\xc4\x9c\x17\xb8\xfa\x07\xf0\x21\xdc\x04\x3c\x43\x8c\x02\x45\x14\xf1\xee\x22\x2b\xaa\xe2\xaf\xb5\xad\x75\xb7\xd2\x0d\x77\xe2\x5d\x2c\xfd\xcd\x13\xa3\x04\x58\x3a\xe4\x89\x71\x8d\x45\xe7\xc4\xc7\x9a\x90\xa0\xc4\xc7\x1a\x0c\x6b\xca\xb0\xa2\xdc\x0a\xde\x00\xae\x89\x67\xfa\x86\x05\x66\x6c\x06\x10\x65\x0a\x25\xa1\xaf\x40\xb7\xf9\x92\xc6\xea\xe3\xf9\x93\xc7\xbf\x4a\xa1\x89\xb0\xab\xcc\xae\xc1\xc2\x0b\x89\x89\x85\xa9\x35\x39\x31\x41\xa2\xdc\xab\xe2\x23\xcd\x4c\x50\xe2\xa3\xa3\x97\x0a\x81\xb8\x8f\x2f\x11\xfe\xe1\x3a\x5e\x7e\xb8\x7e\xe4\xe2\x5f\xad\xd3\xc3\xcb\x9d\x1e\xd7\xc4\x4b\x9d\xde\xb3\x68\xa7\x97\xa6\xd1\xd2\x55\x40\xea\xca\x41\x31\x48\x8f\xa1\x95\xab\xa7\x90\xba\xc2\x14\xa9\x74\x04\x55\xe7\x00\xa9\xab\x07\xc5\xe7\x69\x06\x7d\x3a\x77\x0a\xa9\xab\x4c\x91\x4e\x8f\x22\x15\x4b\xcf\x79\x62\xc8\x80\xd4\xea\xfd\x2f\x6e\x23\xb5\x10\x84\x33\xf1\x25\x71\x3f\x9c\x0f\x1e\xde\xd5\x12\x7a\x34\x3f\xe1\xbe\x3c\x74\x9d\x41\x2d\xf0\xb4\x8b\x3a\x8b\xfb\x6e\x0c\xff\xe5\xc6\xc0\xc3\xcf\xd0\x93\x66\x54\x4b\xe8\x27\xf2\xa3\x6e\xec\xb8\xab\x07\x5e\x09\x4a\xd3\x26\x3d\x8c\x18\x78\x24\x46\xc6\x53\x30\x3d\x02\x1e\x96\xf6\x2f\x0c\x0c\x43\xec\x9f\xdd\x35\x8c\xe4\xe0\xec\xae\x01\x1e\x15\x19\xa1\x99\xf1\xb1\xd1\xd1\xb1\x71\x86\x1e\x89\x50\xff\x3f\x03\xf8\x9e\x63\x39\x9e\xef\x3b\x8e\xe3\xfb\x8e\x6d\xd9\x8e\xef\x58\x96\xe5\xf8\xf7\xda\x5e\xfb\x9e\xef\x79\x96\xe7\xf9\xd6\x30\xec\x10\xff\x08\xbb\x6d\xb7\x6d\x7f\xa3\x72\x50\xd9\x80\x10\x32\x3b\x3b\x3b\xd8\x2b\x97\xcb\x7b\xc0\x30\x51\xa8\xd5\x6c\x3b\x97\xd9\xde\xde\xce\xc0\xd3\x6f\xfe\x84\x8d\x07\xdf\x7e\x5e\x39\x5c\x7b\x6a\x1d\x42\xf2\xce\x16\xec\x55\x36\x2b\xf5\x78\xfc\x6b\x2d\x3e\xbc\xfb\xc3\x99\x4c\x12\x57\x6b\xdf\xe5\x3e\xbb\xfe\xc7\xf5\xfb\x00\xb1\xc5\xda\x66\x6d\x11\x6e\x84\x39\x6b\xdb\x76\x16\x7e\xb1\x7f\xb6\xbf\xbf\x59\x79\x27\xf9\x1b\xd0\x93\x34\x7d\x72\x92\xa3\x19\x7e\x7e\x67\x67\x67\xfe\xcd\xe6\x9d\xdb\xf1\x27\x54\x4b\x68\x55\x6b\xb9\x33\xf1\xdf\x93\x52\xf2\x41\xc4\x8a\x40\x24\x30\xeb\x5b\x9b\xa5\x2f\xcd\x46\xe3\xab\x46\xc3\x0c\x20\x23\xcb\x72\x06\x8a\x2c\xcb\x16\x21\x00\x30\xc1\x84\xe3\x1c\x50\xff\x25\xf8\x27\x00\x00\xff\xff\xe5\x1a\x86\x61\x52\x03\x00\x00")

func assetsHiddenRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsHiddenRom,
		"assets/hidden.rom",
	)
}

func assetsHiddenRom() (*asset, error) {
	bytes, err := assetsHiddenRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/hidden.rom", size: 850, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsInvadersRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x52\x61\x48\x1b\xe7\x1f\xfe\x25\x9e\xe7\x21\x81\xe6\xff\x46\xf9\xbf\xc3\x92\x86\x9d\x0e\x91\x75\x7d\x8b\xae\x4d\xd7\x30\xab\x3d\x21\x32\x08\xa6\x3d\x56\x08\xfb\x70\x86\x79\x4c\xbd\x6a\x77\x23\x23\xad\xc9\x35\x9e\xf1\x60\x93\x0d\xeb\x87\x15\x5d\x70\x6c\x76\xdb\x7d\xd9\xd6\x2f\xfb\xb0\x2f\x72\x0b\xea\xd8\x3e\x09\xeb\x40\x11\x67\x3e\x8c\x59\xbf\xc4\x50\x04\xb5\xc4\xf7\xc6\xc5\xb4\xdb\xdc\xc3\xfb\xbe\x77\xf7\x7b\xee\xf7\x7b\x9e\x07\x5e\xd4\x72\xbd\xaf\xeb\x6a\x4f\xa0\x37\xf2\x66\x97\xd0\x73\xed\x7a\x80\xbc\x72\xe9\x7c\xa0\xfb\x76\x40\xe8\x7f\x7f\xf0\xed\xc0\x8d\xde\x88\xd8\x73\x4d\x82\x7e\x88\x73\x0b\x9b\xab\xf8\x5d\xee\x89\xff\x7c\x00\x9d\xbd\xc5\xf5\x03\xb9\x82\xce\x0e\xd6\x2a\x8d\x23\xc0\xdf\x93\xea\x4b\x8d\xa5\x3a\x02\xe8\x0d\xfe\x9e\xe6\x42\x3d\x32\xbc\x73\x7a\x10\x86\x98\xe1\x7a\x85\xb9\x19\x1a\x39\x05\x05\x3e\xc1\x47\x8f\x1a\x25\xa6\x30\x8f\xd2\x7c\x22\x08\x49\x9b\x4f\x48\x6c\x61\x1e\x4d\xf1\x89\xe0\xa5\xa4\x8b\x4f\x5c\x00\xf4\x99\x54\x5b\x98\x47\x3b\xb2\x6b\xa0\x29\x9b\x59\x58\x7f\x14\x75\x76\xc2\x7e\xd5\x46\xdf\xc8\x80\x76\x1e\x45\x3b\x5d\xce\x29\xc3\xc4\x95\xf7\x6a\x26\xbe\x8f\x1f\x4c\xbc\x18\xe7\xda\x01\xfd\xcc\xa7\x75\xf6\x2a\x87\x7e\x6d\xf7\xa2\xdf\x9c\xf7\x76\x8c\x36\x2b\xb5\x00\xda\x6e\x6f\x45\x3b\x7c\xfa\x75\xf0\xd5\xdd\x66\x7b\xf1\x33\x57\xe9\xbd\x8a\xab\x28\x9f\x38\x6a\x44\xa3\xfb\x75\x17\x01\x8d\x1e\x35\xf2\xd1\xa9\x07\x97\x91\xaf\x29\xe5\x1e\x2a\x5f\x76\xfb\xf8\x94\x7b\x88\xe1\xa3\x21\x8c\x46\xa1\xf0\x60\x53\x6a\xe8\xe7\xe2\xa7\x56\xcf\xdc\xe2\x9e\xf8\xc9\xcb\xbe\x76\xc9\x3e\x4e\xed\xeb\x2a\xd5\x43\xe1\x6b\x96\x0e\xa0\x96\x85\x1f\x0f\xfd\xfd\x1c\x3f\x38\xce\xfe\xbd\xc7\x56\xa1\x98\x29\x64\x10\x81\x8d\x95\x31\x0f\x14\x17\xd6\xa5\xd3\x6b\x0c\x14\xf9\xe8\xc7\x3c\x1f\x95\x6a\x4b\xb8\x3a\xe7\x03\x28\x0e\xc1\x47\x85\x61\x66\xe7\x73\x74\xe3\x2b\xcf\x91\xbf\x34\x40\x6c\xdf\x77\x43\x30\xcc\xdc\x74\x8d\xb8\x7c\xf7\xbf\xac\x2f\xf9\x37\x56\xc6\xb8\xb4\xeb\x8e\xeb\xb5\x3a\xdf\x7d\x28\x86\x34\xdb\x9e\x9d\xd5\x6c\xbb\xb9\x79\x5b\xb3\x43\x21\x6d\x63\xbc\x3b\xa4\xd9\x1b\xde\x60\x8a\x02\xdc\x85\x4e\xb8\x0b\x00\x2e\x97\xab\xa6\xa6\xa6\x06\xa0\x33\x50\x45\x27\xc7\xd9\x00\x14\xca\x40\x01\x40\xeb\xee\x8e\xc7\xe3\x71\x00\x1b\xaa\xb0\x9d\x95\x86\xae\x74\x6d\x3a\x0d\x90\xcf\xaf\x08\x4a\x6b\xf0\x24\xbf\xef\x6d\xd8\xdf\x67\x18\x80\x94\x40\xf3\xf9\x7c\xfe\x24\xbf\x1b\x68\x7d\xfc\xf8\xdc\x39\x80\xc3\xc9\xe5\xe5\xe5\xe5\xc3\x93\xfc\x22\x04\x48\x60\x71\x11\x60\x9f\xd9\x9e\x9c\xcc\xee\x9d\xe4\x9f\xfb\xdf\x6d\xdd\x85\x82\x34\xfa\x1f\xfe\x99\x7f\x0b\x2c\x07\x00\x65\xa6\x8a\xb2\xd7\x6b\x1f\x8e\xff\x30\x35\x37\xf7\x14\x9e\x7e\x38\x37\xf7\xe9\xec\xc1\x9f\x2d\x2d\x7b\x1d\x1d\x1d\xf0\xff\x86\x8e\x8b\x17\x5e\xfa\x69\xab\xaf\xef\xad\xb5\xb5\x2d\xd8\xfa\xdf\x19\xd4\xf4\xc2\x7a\x4a\xa0\x86\x61\x94\xb3\x54\xd7\x29\xcd\x58\x96\x45\xcb\x7a\x3e\x9f\x2f\xd3\xcc\x81\x65\x51\x9a\x29\x39\xa5\xcc\xa2\x61\xd0\xca\x32\xbc\x15\x60\x8c\xc3\xe1\x64\x6e\xfa\xa1\xf5\x30\x97\xa9\x74\x15\x67\x66\x0c\xc3\xa0\xba\x61\x18\x46\xca\x39\x53\x54\xa7\x96\x65\xa5\xf4\xfc\x2f\x4b\x77\xa8\x41\xa7\x73\x59\x6a\x51\xb7\x9b\x52\x2f\x21\x84\xe8\x8e\x0a\xd5\x75\xbd\x18\xf4\x1a\xc6\x27\x33\x33\x45\x5d\x08\x06\x05\x5d\xd7\x29\x21\x84\xba\xfd\xa5\x8c\x93\x10\x58\x16\x00\x24\xc9\x3a\x8e\x8f\x31\xc6\x80\x53\x2b\x1e\x0c\x18\x80\x52\x80\x8a\x22\xe5\x38\x0e\x63\x4c\xdd\xd4\xf1\xec\xf6\xb3\x2c\xcd\x2e\x2d\x51\x86\xa1\x19\xca\xb2\x8e\x0d\xaa\x53\xea\x76\xb3\x2c\x5b\xc9\x4b\xa9\x4e\x59\x96\x15\xa8\x20\x50\xc1\x3c\x86\x12\x03\x0f\x36\x49\x44\x03\x84\x65\xc5\x8c\xc9\x62\xb3\x0c\xe1\x30\x46\x26\x3b\x6d\x22\xd0\x08\x32\xb3\x24\xa2\x62\xf9\xf8\xf7\x69\x31\x69\x86\x93\x8a\x6a\x22\xac\xa8\xb2\x38\x6d\xaa\x6d\xff\xe8\x56\x45\x33\x26\x63\x0d\x47\x54\xa7\x4e\xe4\x0a\xa3\x10\x31\x92\xab\xaa\x85\x45\x0d\x3b\x33\x64\x53\x69\x23\x31\x33\x4b\xd4\x36\x73\xcd\x84\x08\x32\xff\xf8\xa2\xf2\x50\xda\x44\x51\x3d\xae\xff\x9e\xab\x0c\xf7\x88\xe1\x58\xd2\xd1\x97\x71\x4c\x94\x55\xc5\x54\xdb\x40\xfd\xb7\x2c\xc8\xce\x87\x47\xc6\xa0\x90\x48\x73\x55\xda\x2f\xca\x1e\x9c\x33\x9b\x45\x11\x99\xdd\x49\x4f\xc8\xfc\xb6\xea\xe1\xf9\xa5\xaa\xe2\xaf\x00\x00\x00\xff\xff\x17\xa0\xf0\x6f\x15\x05\x00\x00")

func assetsInvadersRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsInvadersRom,
		"assets/invaders.rom",
	)
}

func assetsInvadersRom() (*asset, error) {
	bytes, err := assetsInvadersRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/invaders.rom", size: 1301, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsKaleidRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x60\x48\x6e\x48\x94\x4f\xe2\x57\x32\x5a\xc4\xf0\x59\xee\x03\xd7\x87\x50\x07\x06\x21\x99\x62\x46\x63\x06\x21\x8e\xe4\x06\xb0\x58\x2a\x44\xc4\x99\x41\x48\x46\xc9\x48\x48\xce\x81\xa9\xe8\xbf\x03\x4b\xe1\x7f\x07\xb6\x42\x46\x07\x8e\x22\xc6\x45\xe5\x59\x0f\xba\x84\xb2\xe5\x1b\x37\x59\x31\x14\x31\x66\x7d\xe8\x52\xca\xe6\x6f\xda\x64\xc5\x50\xc8\x08\x12\xbb\xa8\xd8\x25\x90\x2d\xdf\xad\x7a\x6b\x63\x96\x7d\x97\xe8\xad\x8d\xdd\x0a\xb7\x36\x32\xbc\x63\x6c\x00\x04\x00\x00\xff\xff\xae\x3f\xa9\x08\x78\x00\x00\x00")

func assetsKaleidRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsKaleidRom,
		"assets/kaleid.rom",
	)
}

func assetsKaleidRom() (*asset, error) {
	bytes, err := assetsKaleidRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/kaleid.rom", size: 120, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsMazeRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x60\x48\x64\x58\xa4\x74\x88\xd1\x88\x71\x91\xdc\x05\x91\x02\x16\x03\x07\x21\x96\x04\x86\x42\x16\x43\x05\x21\x16\x21\x99\x06\x07\x05\x01\x05\x87\x06\x01\x40\x00\x00\x00\xff\xff\xe2\x9f\x19\x39\x26\x00\x00\x00")

func assetsMazeRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsMazeRom,
		"assets/maze.rom",
	)
}

func assetsMazeRom() (*asset, error) {
	bytes, err := assetsMazeRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/maze.rom", size: 38, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsMerlinRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x12\x92\x54\xf0\x75\x0d\xf2\xf1\xf4\x53\x70\xaa\x54\x70\x49\x2c\xcb\x4c\x51\x08\xf7\xf4\x0b\x71\x0d\x52\xfa\xb9\x58\x36\x41\x20\x91\x41\xe9\xf4\x62\xc3\x04\xee\x44\x69\xa5\xd3\x29\x2c\x4a\xf7\x53\x19\x92\x34\x94\x0e\x1e\x62\x6e\x50\x58\x1c\xf9\x55\xee\x43\x68\x82\x78\x22\x47\x32\x63\xb3\x92\x31\x43\x01\x57\x32\x13\x88\x2e\xe4\x5a\x2c\x7e\x41\x2c\x49\x44\xe9\xe0\x05\xb1\x24\x56\xa5\x83\xa5\x8c\x21\x01\x42\xa6\xa9\x0c\x20\x95\x8b\xc5\x3f\x73\x19\xb3\x08\x55\x26\x33\x08\x4d\x37\x66\x15\x6a\x2e\xe0\x4a\x66\x14\x9a\x6e\xcc\x2e\xd4\x5b\xc8\x95\xcc\x24\x34\xdd\x98\x43\x28\xb3\x80\xab\x90\x2b\x99\x19\x66\x02\xd8\x96\xd4\x52\xc6\x00\x03\xa1\xad\xa1\x0e\x42\x99\x4a\xf7\x4b\x18\x85\x74\x95\x7e\x2e\x76\x4d\x10\x48\xe4\x53\x3a\x2d\xb4\xff\x93\xe8\x27\x76\x23\x06\xa1\xc3\x0c\xef\x9a\x19\x92\x58\x2f\x88\x7e\x92\x2b\xe0\x68\x35\x28\x55\x08\x08\x10\x3a\xcf\xf0\x6e\x71\x64\xb3\x43\xf1\xdf\xcf\xc6\x9f\x52\x3f\x6a\x26\x68\x27\x4b\x5f\x30\x2d\x60\xfd\xa4\x79\xc1\x94\xe1\xdd\x62\xfe\x04\xf1\x44\xf6\x0b\x12\x05\x5c\x17\x24\x0a\xb9\x2e\x48\x14\x7c\xbb\x20\xc1\xf0\xee\x7f\x23\x18\xfc\xaf\x03\x83\xdb\xab\xba\x4f\x9f\x7e\xcf\xd1\xcf\xfb\x66\xc1\x82\x0d\x06\xfb\xe2\x03\x03\x6f\xde\x6c\x6e\x6a\x6e\xfa\xfd\x82\xa3\x83\xf5\xd1\xbe\x05\x3b\x14\xec\x1a\x1a\x1a\x1a\x7e\x7c\x6f\xdd\x3e\xf5\x6b\x59\x48\x58\x48\x98\x95\x96\x96\x96\xe5\xb6\xa5\xdb\x96\x9a\x02\x02\x00\x00\xff\xff\xd5\xc3\x96\x10\x59\x01\x00\x00")

func assetsMerlinRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsMerlinRom,
		"assets/merlin.rom",
	)
}

func assetsMerlinRom() (*asset, error) {
	bytes, err := assetsMerlinRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/merlin.rom", size: 345, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsMissileRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x12\x92\xf4\xf5\x0c\x0e\xf6\xf4\x71\x55\x48\xaa\x54\x70\x49\x2c\xcb\x4c\x51\x08\xf7\xf4\x0b\x71\x0d\xca\xe1\x49\x60\x48\x64\x48\xe5\x48\xe3\x4a\x67\xc8\x63\x5c\xb4\xf6\x82\x48\x01\x87\x81\x83\x90\x66\x02\x43\xa2\xcc\xa2\x0d\x17\x44\x40\xd8\x8e\x51\xc8\xb3\x80\xc5\xc1\x22\x8f\x41\xc8\xbf\xe0\x8f\x03\x43\x1e\xe3\x05\x91\x3f\xa2\xbf\xd9\xad\x19\x84\x82\x93\x38\x1e\xcd\x13\x9a\x6a\xc3\x50\xf3\x2f\x59\xba\x89\x61\xd1\x86\x4b\x86\x29\x0c\x97\x0c\x8b\xff\x5f\x32\xb4\x67\x48\x61\x34\x66\x16\xca\xbd\x64\x68\xc2\x28\x34\xb1\x9c\xb5\xf4\x7f\x13\x43\x32\xc3\xa2\xb5\x97\x4c\x5c\x19\x84\xa6\x97\xfd\x37\x63\x10\xb2\x5c\xb4\xe5\xbb\xf1\xa7\xd4\x64\xe9\x14\xde\x8f\x9a\x97\x5d\x8b\x59\x3f\x69\x5e\x76\x15\x5a\x2d\x60\x61\x21\x60\x51\xf3\x0f\x10\x00\x00\xff\xff\x29\x5c\x48\x6e\xb4\x00\x00\x00")

func assetsMissileRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsMissileRom,
		"assets/missile.rom",
	)
}

func assetsMissileRom() (*asset, error) {
	bytes, err := assetsMissileRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/missile.rom", size: 180, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPongRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x62\xca\xe6\xc9\xb1\xcf\xe5\x59\xf4\xea\xd6\xb6\x3b\xd7\xf2\x18\x94\xae\xa4\x31\x67\x30\x25\x24\x7c\x10\xfd\xc0\x6e\xc0\x20\x24\x75\x5c\xbc\x9c\x23\xf3\xff\xa2\x0f\xd7\x0a\x21\x2a\x12\x18\x1f\x2c\xac\xfe\x97\xc0\xf2\x60\x61\x35\x53\x82\x7c\x37\xd3\xad\x6d\x09\x3c\x0f\x16\xd6\xfe\x4b\xe0\x7d\xb0\xb0\x96\x29\x41\xbe\x97\xe9\xce\x35\x90\xea\xb6\x96\xf6\x29\x09\xf6\x6d\x4c\x89\xf2\xed\x42\x6e\x4c\x42\x15\x6e\xf6\x42\x4d\xee\xf2\x99\xff\xdd\x19\x32\x19\xaf\x15\x0a\x69\x65\x30\x25\x33\x36\x14\x34\x6c\x15\xea\xca\xf8\x97\xcc\xd5\x50\xd0\x70\xd5\x9e\x51\x68\x51\x22\x53\x83\xa8\x3d\xa3\xd0\x2e\x30\x79\x02\x4c\x1e\x4a\x50\xf8\x20\xa1\x74\xa5\xcf\x44\xe9\x4a\x9a\x9d\x31\x63\x1a\x73\xc6\x3f\x63\xc6\x0c\x26\x21\xb1\xca\xff\x9e\xff\x32\xff\x0b\x9d\xa8\x64\xf4\x64\xca\x64\x4c\x60\xf9\x20\x51\xc6\xe8\xe6\x50\xf6\x4f\x28\x67\xd1\xa7\x7f\xc6\x9f\x52\x3f\x6a\xa6\x88\xa4\x32\x5c\x09\x2d\x11\xfd\xa4\x79\x25\x94\xe1\x5d\x03\x04\x30\x80\x00\x20\x00\x00\xff\xff\x57\xa8\x75\x7d\xf6\x00\x00\x00")

func assetsPongRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsPongRom,
		"assets/pong.rom",
	)
}

func assetsPongRom() (*asset, error) {
	bytes, err := assetsPongRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/pong.rom", size: 246, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPong2Rom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\xfa\x93\xcd\x93\x63\x9f\xcb\xb3\xe8\xd5\xad\x6d\x77\xae\xe5\x31\x28\x5d\x49\x63\xce\x60\x4a\x48\xf8\x20\xfa\x81\xdd\x80\x41\x48\xea\xb8\x78\x39\x47\xe6\xff\x45\x1f\xae\x15\x42\x54\x24\x30\x3e\x58\x58\xfd\x2f\x81\xe5\xc1\xc2\x6a\xa6\x04\xf9\x6e\xa6\x5b\xdb\x12\x78\x1e\x2c\xac\xfd\x97\xc0\xfb\x60\x61\x2d\x53\x82\x7c\x2f\xd3\x9d\x6b\x20\xd5\x6d\x2d\xed\x53\x12\xec\xdb\x98\x12\xe5\xdb\x85\xdc\x18\x84\x2a\xdc\xec\x85\x9a\xdc\xe5\x33\xff\xbb\x33\x64\x32\x5e\x2b\x14\xd2\xca\x60\x4a\x66\x6c\x28\x68\xd8\x2a\xd4\x95\xf1\x2f\x99\xab\xa1\xa0\xe1\xaa\x3d\xa3\xd0\xa2\x44\xa6\x06\x51\x7b\x46\xa1\x5d\x60\xf2\x04\x98\x3c\x94\xa0\xf0\x41\x42\xe9\x4a\x9f\x89\xd2\x95\x34\x3b\x63\xc6\x34\xe6\x8c\x7f\xc6\x8c\x19\x4c\x42\x62\x95\xff\x3d\xff\x65\xfe\x17\x3a\x51\xc9\xe8\xc9\x94\xc9\x98\xc0\xf2\x41\xa2\x8c\xd1\xcd\xa1\xec\x9f\x50\xce\xa2\x4f\xff\x8c\x3f\xa5\x7e\xd4\x4c\x11\x49\x65\xba\x12\x5a\x22\xfa\x49\xf3\x4a\x28\xc3\xbb\x06\x08\x60\x00\x81\x03\x07\x0e\x30\xfc\x67\xc8\x56\xc8\x61\x58\xf4\xed\xf6\x91\x1a\x16\x1b\x05\x61\xa6\x2c\x86\x6c\x86\x1c\xf9\x45\xbf\x6e\x6d\xbc\x75\xb0\x8a\xc3\xca\x41\x58\x68\xd1\xb7\x2c\x86\x6c\x85\xdb\x0b\x19\xde\x01\x02\x00\x00\xff\xff\x6d\xb6\x46\xac\x26\x01\x00\x00")

func assetsPong2RomBytes() ([]byte, error) {
	return bindataRead(
		_assetsPong2Rom,
		"assets/pong2.rom",
	)
}

func assetsPong2Rom() (*asset, error) {
	bytes, err := assetsPong2RomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/pong2.rom", size: 294, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsPuzzleRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x12\xca\x66\x4c\x14\x48\x62\x48\x60\x58\xb4\xe1\xa2\xfa\x07\x4d\x03\x86\x5b\x5b\x0b\x39\xaa\x38\x0c\x0d\x84\x54\x12\x05\x8a\x38\xb2\x84\xaa\x39\x16\x33\x7c\x90\xfb\x10\x5a\xc0\x68\x20\x20\xc4\x05\x52\x9f\xc3\x90\xf4\xff\x00\x5b\x01\x93\x52\x50\xd1\x7f\x23\x06\x21\x8b\x3c\x86\x3c\x86\x0f\x5c\x4a\x41\x75\x8c\x75\x8c\x42\x1e\x2d\x0b\x5a\x37\xb4\x1d\x30\x60\x12\x4a\x71\x65\x14\x4a\x29\xfd\x51\xf6\xc7\x80\x43\xa8\xc0\x55\x52\xa8\xa0\x94\xa3\x8c\xc5\x80\x4d\xa8\xc6\x45\x48\xa8\xa6\xe4\x47\xd9\x7f\x03\x16\xa1\x0e\x17\x2d\xa1\x8e\x12\x8e\x32\xc6\xc5\x0c\xdf\xe4\x3e\xa4\x36\x32\x24\x30\x80\x59\xa1\x8b\x19\xfe\xc8\x35\x08\x7c\x08\xfd\xa8\x79\x25\xf4\xd6\xd6\x2e\x87\xee\x80\x9e\x04\x86\x77\xef\xe2\xfe\x41\x01\x20\x00\x00\xff\xff\x46\xa9\x0c\x04\xb8\x00\x00\x00")

func assetsPuzzleRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsPuzzleRom,
		"assets/puzzle.rom",
	)
}

func assetsPuzzleRom() (*asset, error) {
	bytes, err := assetsPuzzleRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/puzzle.rom", size: 184, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsSquashRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5a\x74\x29\x81\x21\x91\x21\x49\xee\x82\xe0\x05\xc5\x02\x0e\x03\x07\x21\x8e\x45\x67\x13\xec\x12\x19\x2f\x88\x16\xb2\x1a\x4a\x09\x49\x5c\x10\x49\x66\x38\xc2\x5f\xc2\x91\xca\xd8\x12\x98\xca\x9c\xc6\x94\xce\xd8\xe1\x50\xc1\x94\xc9\x98\xc5\x92\xcd\xaa\xb4\x63\xd1\x89\xcb\xae\xd7\x1b\x73\x18\x95\xd6\x2d\x3a\xd1\x53\xd0\xdb\xf0\x72\x9e\x50\x8c\x0b\xa3\x50\xcc\x65\xd7\x92\xff\x97\x5d\x5f\xcd\x13\xca\x72\x91\x14\xca\xba\xec\x5a\xc2\x78\xd9\xb5\x3d\xa4\x23\xc5\x9d\x31\x95\xd9\xdd\x36\xf5\xaf\x07\x63\x1a\x93\x87\x6c\xda\xbf\x3b\x17\xaf\x37\x9a\x33\x0a\xb9\xf4\x34\xf4\xb8\xe6\x32\xcc\xb9\x20\xe4\x52\xcb\x68\xcb\x2a\xd4\xf3\x87\x4b\x69\x47\xf5\x7f\xa5\x1d\xd6\xff\x85\x5c\x94\x76\x64\x33\x28\xed\xc8\x91\x53\x5a\x27\xb4\xec\x8f\xe8\x1f\x76\x1b\x06\xa1\x0d\x0c\xef\x16\x5d\xfe\x6d\xfc\x29\xf5\x93\x66\x82\x65\x22\xd3\x05\x51\x86\x77\x0d\x20\xf0\x00\x04\xfe\x03\x02\x00\x00\xff\xff\xe0\x43\x18\x80\xd3\x00\x00\x00")

func assetsSquashRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsSquashRom,
		"assets/squash.rom",
	)
}

func assetsSquashRom() (*asset, error) {
	bytes, err := assetsSquashRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/squash.rom", size: 211, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsSyzygyRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\x4f\x68\x1c\x55\x18\xff\xbe\x99\x4d\xb2\x89\x69\x33\xfb\xde\x8c\x09\x1e\x3a\xdb\x38\x6b\x4d\x28\x64\xda\x5b\xd5\x76\x02\xc9\x61\x90\x12\xdb\xa5\x6b\x3d\xbe\x6c\x4c\x6a\x6d\x56\x76\x86\x66\x86\xb6\x31\xbc\x46\xaa\xa1\x36\x8b\xb6\x22\xb1\x84\xc2\x82\x0f\x6a\x0e\x25\x17\x7b\x94\xb4\x25\x27\xa5\x74\xc0\x0e\xd2\x82\xcc\x41\x3c\x86\x91\x78\x09\x6a\x46\xde\xae\x60\xf0\xe2\x77\xf8\xfd\x7e\x1f\xdf\x7b\xdf\x1f\xf8\x11\xb2\xbc\x5c\xfc\xe6\xc8\xb1\x63\x76\xb1\x7c\xe6\x4c\xb1\xd1\x00\xeb\xbe\xf5\x8c\xf5\x25\x4d\x62\xb1\xfd\x49\x93\xbc\x4a\x5e\xb4\x9e\x91\xc3\x90\x90\xc3\x0f\x4c\x4f\x7b\xd8\xe7\xe7\x1f\xa9\xd7\xec\x8f\xb5\x4f\x8a\x4b\xb6\x0b\x21\xba\x18\x66\xae\x12\xa0\xab\x06\x99\x38\x19\x1d\x8c\xbd\x77\xd3\xf3\xbf\xdd\x85\xdf\x0f\x70\x3b\xad\x5c\x44\xa9\x18\xa6\x95\xd2\xe0\xfb\x70\x19\xd2\x2e\x1b\xc8\xea\x71\x20\x5f\x30\x48\x87\x9e\x6f\x3a\x48\x6e\x3c\xdf\x2c\x0d\xa6\x06\x59\xdd\x35\x6a\xf8\x01\x90\x55\x9e\xc8\x4a\x69\x90\xa9\x49\x73\x0a\x58\x67\xd2\x9c\x42\xd6\x95\x34\xa7\x14\x96\x4f\x9a\x53\xea\x18\xf8\xd9\x18\xfa\x38\xa6\x78\xd9\x98\xea\xa1\x9c\xea\x20\xb5\x8e\x23\x5d\x62\xce\x55\x85\x99\x8b\x0a\x5f\xe7\xfd\x0e\xd2\x25\xbe\x5e\x57\xb9\xd1\x52\x1b\xfc\x50\x9b\xeb\x39\x5e\x92\x8a\xe5\xd2\x81\xc7\x5d\x0b\xca\xf5\x5f\x64\x87\xf6\x3e\xed\xd9\xcc\x4e\x0d\xb9\x29\x7d\x49\x56\x6e\x9d\xa2\x27\xda\x77\xec\xb9\x08\xd2\xca\x35\x5b\xaa\x74\xba\x8e\x69\xe5\x4d\xa0\xef\xb0\xde\x7a\x66\x03\x9d\xb8\x9c\x91\xba\x38\x19\x7b\x2e\x84\x99\x8b\x21\xba\x4a\x90\xb9\x6a\x80\x77\x61\x47\xbe\xce\xd2\x8a\x0d\xa4\x7e\xe9\x9f\x7c\x09\x2e\x21\xa9\xb3\x7d\xe9\x00\x7b\x21\xb9\x43\x1b\x17\x70\x16\x6a\x70\x05\x5f\xef\xa1\x6b\x17\x60\x1e\xdf\xe8\xa1\x6b\xb3\xf0\x21\xfe\x5f\x47\xba\xf2\xd5\x28\xfd\x79\x6f\x57\xba\x02\xc9\x4c\xe1\x5c\xf7\x7b\x23\xe7\xfb\x45\x39\x5e\xf8\x69\x21\xcc\xc4\x44\xec\xc5\x9f\x07\xf9\xbd\x28\x4e\x49\x16\x77\x66\xe8\xb9\x82\x75\x5b\xdc\xdb\x9e\xbe\xf5\x44\xb7\xb8\xcd\x9f\x3a\xa8\xbf\xa6\x8f\xdf\xdc\xd0\x8f\xf2\x22\xdf\x6c\x67\x5c\xe3\xdf\x3a\xa0\x8f\x8b\x7b\x1f\x3d\x59\xdc\xb8\xba\xbe\x5d\x91\x3f\x66\x68\xb8\xb3\x6c\xdf\x28\x7e\xaa\x89\xaf\xad\xdb\x0f\x9c\x87\x26\xdb\xc7\x0d\x07\xf4\x79\x66\xf3\xfe\x16\xab\xbc\xd4\xe2\x01\x7e\x48\xb2\xbe\xf8\xa8\x6f\x7b\x28\x2a\x49\xaf\xe9\x9f\x49\xaf\xe9\x5f\xea\x6f\x43\x62\xdd\x6f\xbb\x2d\x9e\x13\x6b\x81\x12\x5f\xfc\x6b\x28\xe8\x89\xe7\xfe\x1c\x0a\x3a\xe2\xb9\x3f\x5a\x08\x5b\x62\x62\x12\xaa\x30\x63\x46\x07\xa3\x49\x2f\x7f\x64\x54\xff\x4e\x94\xab\x38\xed\x44\x23\x4f\x47\xfc\x3e\x89\xb0\x35\xd9\x5b\xed\x12\xd5\x68\x58\xcc\x7a\x9d\xd1\xb0\x08\x5a\xd8\xd6\xfc\x5f\x3d\xb9\xbf\x3a\x20\xae\x47\x2f\x8b\x86\x97\xf7\xb3\xc8\xf2\xba\xfd\x5d\x71\x33\x7a\xc5\xeb\xf4\x51\xac\x44\x25\xd8\xaa\x6d\x7e\xef\x34\xd6\x1b\x3f\xbe\x85\x86\x75\x05\x6b\xbf\xfe\x60\x36\x36\x5a\xd9\xd1\x79\xac\xc1\x63\x67\x61\x74\xd7\x90\x08\x5b\x1c\x32\xd8\x05\xfe\x9f\x30\x35\x4d\x33\x11\x11\xcd\x42\xa1\x50\x30\x73\x32\x4c\x54\x94\x5c\x2e\x9f\xd7\x4c\xb3\xa0\x69\x1a\x95\x85\x8e\x0e\x05\xbc\xd3\xa7\xe7\x7a\xc9\x01\x9d\x74\xeb\x27\x0c\x63\x18\xc2\x71\x4b\x0f\xe1\x6c\xd9\x2f\x9f\x05\x40\x40\x00\x80\xbf\x03\x00\x00\xff\xff\x9c\xbf\xe4\x67\xb2\x03\x00\x00")

func assetsSyzygyRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsSyzygyRom,
		"assets/syzygy.rom",
	)
}

func assetsSyzygyRom() (*asset, error) {
	bytes, err := assetsSyzygyRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/syzygy.rom", size: 946, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTankRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\x51\x4d\x6b\x13\x51\x14\x3d\x6f\x32\x9d\x4e\x63\x65\xc2\x3c\xc5\xa4\xa1\x69\xc8\x5b\xd8\x80\x48\xa9\x14\xba\xea\x74\xec\x8c\x82\x16\xea\xa2\xd9\x3f\xa7\x9d\xfa\xd1\xd8\x94\x4e\x28\x5d\x0c\xd2\x6a\x17\x2e\x5c\xba\xca\x42\xcc\x98\x45\x17\xd2\x3f\x50\x10\x14\x71\xd9\xcd\xf4\x07\x64\xe7\x07\xe5\x31\x0d\x46\x44\x8b\x23\x2f\x72\x39\xf7\xdc\xcb\x3d\x07\x0e\x5c\x73\x6a\xfb\x0f\x2f\xef\xfa\x4b\x58\x03\xdd\x47\x0a\x80\x60\x34\x8b\x82\xa2\x6a\xba\xa2\x64\xae\xc1\x80\x32\x74\x5d\x07\x94\x21\x00\xd8\xc0\x93\x37\x8f\xf5\x47\xda\x43\xf5\x81\xb2\x56\x58\xcd\xad\x8c\x7a\xb8\xaf\x45\xe6\xef\x1a\x3b\xe1\xf3\xc9\xe5\x64\x78\x0a\xe6\x3d\x76\xc2\xb2\xcc\x8b\xcc\xbe\x5f\x39\xac\x7c\xae\x9c\x5a\x84\x5d\xb2\x88\xe4\x01\xc2\x25\x42\xd7\xcc\xc1\xfd\x16\x66\x60\xbe\xa0\x2f\xbf\xb4\xbd\x91\xaf\x6d\x4f\xfd\xd6\xf6\xb4\xef\x6d\x8f\xdc\x04\x44\xe5\x70\xaf\xcc\x5a\xec\x5d\x9d\x78\x68\x20\x32\xfb\xb5\xb7\xa9\x4d\x38\x6c\x95\x53\x5b\xe3\x17\xed\x11\xae\x25\xa5\xf8\x36\x04\x1f\xea\xbe\x86\x70\x0d\x08\xdf\xd8\x4e\xa5\xb2\x99\x09\x32\xac\x25\x2b\x62\xfd\x5a\xa7\x10\xdb\x10\x11\xeb\xfb\x2e\x20\xe4\xc6\x5a\x75\x85\xbd\xbf\x7b\x44\xb3\xb1\x2d\x15\x10\x3e\x38\xa2\x2b\x49\x8d\xaa\xd1\x78\xdf\x9f\x31\xa8\xd3\x19\x8b\xdd\x69\xd0\xe9\x0f\x99\xa8\x70\x56\x4a\xfc\x3d\x7c\x34\xb6\x08\x6b\x75\xc6\xea\x99\xad\xb4\x81\xd8\x8d\xc6\xa5\xf3\xd3\x70\x67\xe2\x47\x29\xf1\x9f\xa3\x73\x55\xf2\x3e\xa4\x93\x97\x93\xbc\x6f\xd0\x39\x1f\x74\x6e\x91\x98\xca\xa2\x42\x9f\xfd\x4f\x60\x2a\x32\x41\x03\xb1\x6d\x11\x53\x79\x9a\xe5\xf3\x49\x1e\x5d\xf3\x0e\xba\xec\x84\xf3\x24\x4f\x5f\x6d\x80\xee\xdb\xa4\x99\xda\x6a\x90\xda\x5a\x40\xec\x91\x26\x81\x70\xd0\x24\x0b\x08\xc8\xc2\x6c\x90\x3a\xf9\x66\x0a\xb1\x0e\x07\xf4\x78\x41\xc2\xa2\xc7\xce\xc4\xfa\x51\x03\x10\x2b\xfa\xaa\x1e\x55\xff\xde\xe8\xf9\xec\x74\x65\x32\xaa\xfe\x94\x53\x0f\x22\xa9\xc6\x6e\xa0\x9d\x0d\x7a\xaf\x1a\xbb\x10\x24\xb7\x1c\xd6\xc3\xd0\x09\xc3\x7a\xb8\x9c\xc3\xf9\xce\xc6\xce\x39\xac\xd2\x76\xc9\xc2\xee\xc1\xe6\xaf\xcd\x83\x0b\xc5\xc9\xd9\xa9\x72\x4e\x7e\x5e\x2f\x16\x8b\x79\xf5\x5f\x00\x00\x00\xff\xff\x73\xcb\x29\xa9\x30\x02\x00\x00")

func assetsTankRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsTankRom,
		"assets/tank.rom",
	)
}

func assetsTankRom() (*asset, error) {
	bytes, err := assetsTankRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tank.rom", size: 560, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTetrisRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8b\x3d\x6b\x14\x41\x1c\xc6\x9f\xc9\x6d\x72\x22\x22\xb7\x2f\x29\x34\xe1\x0c\x3b\x5c\x71\x56\x51\x63\xb4\x88\xec\x1f\x56\xab\x34\x69\xec\x82\x4c\x12\x76\x7d\x23\xb2\x97\xa8\x85\x31\x61\x11\xb1\x52\x51\x10\x4b\xf1\xb6\x30\x7e\x80\xc3\x7a\xc0\x7c\x80\xd1\x3e\xb0\x11\xe2\x4b\x33\xc4\x45\xaf\xb0\x70\x64\xd7\x9c\xc1\xe2\x99\xdf\x33\xbf\x79\x26\xeb\xf1\xcf\xfe\xbb\x84\x29\x7b\xb2\xe5\x8c\x74\x8c\xb2\xc5\x71\x65\x8b\xd6\x29\x38\x47\xb7\x92\x8b\x89\x33\xfe\xbe\x26\x9a\x0b\x35\x7f\xfe\xe7\xa8\xf2\x02\xe6\xcc\x28\xaf\x63\x94\xc7\xc9\x19\xff\xd2\xf5\x57\xbe\x76\xfd\x87\xdf\xba\xfe\xcb\x4f\xaf\x9c\xb9\x18\xfd\xd1\x7e\x7d\x1a\xd5\x86\x39\x27\xb3\xad\x1f\xcd\x18\x21\x8b\xad\x70\x28\x3e\x14\xd6\xe2\x23\xfd\x26\xb4\xf2\x12\xc3\xa7\x02\x56\x35\xc6\xa7\x06\xdc\x37\xe6\xaf\x59\x65\xa1\xb5\x04\x7f\x7e\xe0\x57\x4d\x68\x96\x6a\xe5\x1d\x3a\xc5\xd5\xe1\x6b\x23\xd7\xad\x85\x13\x51\x63\xb1\x0e\x4d\x39\x40\x92\x80\x9c\x40\x82\x40\x24\x30\x91\x03\x92\x4a\x97\x82\x48\x02\xf9\x04\x04\x11\xd2\x6a\x9b\x42\x8a\x03\xa6\xe5\x5f\x21\xff\x51\x4a\xfc\x17\x22\x22\xec\x1d\x50\x79\xf1\xd9\xbb\x66\x1a\xee\x79\xe8\xac\xf7\xb8\x31\xd3\xbc\xcf\x06\xe1\x57\x66\x0f\xf3\x95\xe7\x12\xba\xc3\xdc\x39\x31\x76\x13\xca\x0e\xb0\xc6\x94\x9d\xb0\xc9\x96\xbb\x08\x2d\xc6\xf6\xfb\xed\xa7\x8d\x27\xf9\x86\xa9\x36\x3b\x01\xdc\x67\x6a\xc7\x7d\xa1\x3e\xac\xb1\xea\xf5\xd1\x2c\xdc\x37\xeb\x66\xc3\x5c\x60\xee\x03\x2e\x03\xc6\xe5\x3d\xc6\x65\xfa\x7a\xb9\x9e\x7e\x24\xeb\xce\xef\x4b\x43\x91\x05\xbd\x89\xe2\xf2\x5b\xeb\xd7\x99\x22\xda\x6b\x2f\x9f\xbe\x85\xed\xdd\xf5\xe1\xef\xed\xf2\x2c\xda\xdb\xbb\x9b\x28\xa2\xac\x07\x7d\x03\xe2\x18\xf4\x39\xfe\x27\x00\x00\xff\xff\x72\x07\xe7\x0c\xee\x01\x00\x00")

func assetsTetrisRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsTetrisRom,
		"assets/tetris.rom",
	)
}

func assetsTetrisRom() (*asset, error) {
	bytes, err := assetsTetrisRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tetris.rom", size: 494, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTictacRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x12\x92\x08\xf1\x74\x0e\x71\x74\x56\x48\xaa\x54\x70\x49\x2c\xcb\x4c\x51\x08\xf7\xf4\x0b\x71\x0d\xca\x66\xc8\x61\x68\xd8\xd0\x78\x60\xf1\xb3\x8f\xa1\x8b\x8f\xfc\x4f\x5d\xbc\xe5\x7f\xe8\xe2\x67\x1f\x53\xbb\x19\x7a\x04\x18\x1e\xe4\x31\x26\x08\x27\x32\x2f\x9e\x75\x41\xb0\x80\xc3\x40\x5b\xc8\x2e\x41\xb8\x90\xc3\x50\x19\x44\x27\x32\x2f\x9e\x7d\x41\xbe\x80\xc3\xc0\x58\x28\x24\x41\xb8\x90\xff\x82\x14\x98\x9d\xa0\x9c\xf6\x81\xab\x91\x61\xf1\x96\x0f\x72\x1f\x52\x1d\x18\x84\xba\x94\x6a\x84\xb2\x12\x04\x3e\x48\x7c\x10\xfd\xc0\x6e\xc0\x20\xd4\xc4\xf0\x2e\x81\xa9\x8f\xb9\xe1\xc1\x87\xd0\xc5\x57\x1a\x04\x0a\xfe\x37\xb0\x7c\x90\xfb\x98\xba\x78\x95\x1d\xf3\xe2\xf5\x17\x44\x95\x4e\x58\x31\x08\xc9\x2c\xde\x92\xc8\x90\xc4\x90\xcc\xf8\x21\xd5\x80\xa1\x90\xf1\xb3\x5c\x11\xa3\x91\x80\xd0\x16\x43\x01\xa1\x2c\x21\x99\x2c\x86\xc5\x5b\x12\x18\x3f\xc8\xfd\x48\xcd\x64\xe8\x64\x51\x76\xe9\x14\x51\x76\xe9\x54\x51\xf6\xca\x64\xe8\x34\x51\x76\xe9\x74\x51\x76\xe9\x0c\x01\xf3\x52\x94\x5d\x3a\x4b\x94\x5d\x3a\x5b\xe0\x3c\x90\x3c\x0b\x98\x57\x02\x55\x29\x02\xe6\xb5\x80\xf5\xc0\x4c\x69\x81\xca\xb1\xc0\xf5\xb9\x40\xe4\x18\xde\x75\xf2\x75\xf2\x31\xbc\xf3\x14\x15\x0e\xf1\xb4\x17\x8e\x62\x78\xa7\x9c\x56\xcd\x28\x1c\xa7\x9c\x56\xc3\xa8\x9c\x96\xc5\xf8\x81\x8b\xe1\x5d\x32\x6b\x0a\xd7\xe2\xf5\x97\x5d\x93\x99\x4a\xd8\x16\x3f\xfb\x6d\xac\xdc\x91\x6c\x94\xc2\xb5\x78\xd5\x65\xd7\x64\x7d\x90\xc8\x1f\xe3\x4f\xa9\x1f\x34\x95\xa7\x7c\xd4\x54\x9e\xf2\x49\xf3\xb2\x6b\x31\x2b\xc3\xbb\xfa\x06\x54\x20\xa3\xa4\xa4\x24\xa3\x24\xc2\x21\xa2\xc4\xc8\x00\x03\x8c\x10\x80\xc6\x17\x66\x95\x66\x55\x66\x15\xe6\x95\xe6\x55\xe6\x15\x16\x95\x16\x55\x16\x05\x04\x00\x00\xff\xff\x10\x7a\x29\x3a\xe6\x01\x00\x00")

func assetsTictacRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsTictacRom,
		"assets/tictac.rom",
	)
}

func assetsTictacRom() (*asset, error) {
	bytes, err := assetsTictacRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/tictac.rom", size: 486, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsUfoRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5a\x74\x36\xd3\x22\x8b\xe3\xe6\xe2\x45\x17\xb2\x19\x72\x98\x6f\x1f\x5e\x74\x2d\x45\x36\x55\xfe\x4a\x60\x3a\x43\x06\xbf\xd2\x22\xa5\x35\x1e\x0c\x42\x4a\x29\x72\xa9\x32\x8b\x2e\x5f\x09\xce\x63\x48\x6b\xc8\x65\x79\xbb\x30\xed\x7f\x2e\xeb\xdb\x85\x69\x0c\xb9\x6c\x6f\x17\xa6\x31\x9a\x35\x28\xdd\x58\x74\xe1\xf6\xe1\xb3\x8c\xdd\x57\x6e\x1f\xb6\x67\x10\x9a\xb4\xe8\xec\xcd\xc5\x67\x19\x6d\x19\x72\xff\x57\xfe\xbb\xb9\xd8\x9e\x41\xa8\xc7\x8f\x41\x48\x0f\x64\x82\x2b\x83\x50\x5b\xe9\xff\x96\x94\x2b\xc1\xf6\x8c\x42\x6e\xb9\x1c\xbd\x41\xbe\x1c\x42\x3d\x42\x93\x94\xd6\x54\xfc\x17\x92\x53\x5a\x54\xce\x2a\x34\x4d\x69\x51\x39\xbf\xd2\xa2\x5c\xe6\xbf\x12\x20\x1d\x42\x6d\x8b\x7e\x7c\x37\x4e\x66\x50\xda\xc6\xf0\x6e\xd1\x8f\x1f\xc6\xc9\x46\x20\x56\xae\xf4\xa7\xd4\x0f\x9a\x97\xaf\x16\xb3\x7e\x04\x93\x9f\x34\x2f\x5f\x65\x78\xc7\x58\xf3\xaf\x26\xe1\x43\x82\xc3\x83\x05\x3f\xae\xe4\x31\xe6\x0a\xfc\x95\x60\x78\x07\x08\x00\x00\xff\xff\xe7\x13\x14\x33\xe0\x00\x00\x00")

func assetsUfoRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsUfoRom,
		"assets/ufo.rom",
	)
}

func assetsUfoRom() (*asset, error) {
	bytes, err := assetsUfoRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/ufo.rom", size: 224, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsVbrixRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8d\xbf\x6b\x53\x5f\x18\xc6\x9f\x93\x1f\x84\xef\xe5\x3b\x34\xf7\x1a\x28\x58\x62\x7a\x4f\x1d\xb2\x45\x1b\x10\x1c\x9a\x22\xa4\x43\x3a\xd4\xa1\x53\xa6\x73\x93\xdb\x5a\xe5\x46\x6e\x92\xc1\x82\x22\xe7\x2e\x45\xa3\xc2\x59\xb2\x4a\x9b\x0b\x4e\x19\xd2\xc5\xc1\xa9\x83\x9b\x20\xb7\xd4\xa9\x83\x9c\xbf\xe0\x70\xac\x83\x2e\x7a\xe4\x5e\xf1\x33\x3c\xcf\x03\xef\xfb\x3e\x2f\x24\x7d\xcf\x4a\xf2\xad\x5d\x38\xc0\x83\x3c\xdd\x72\x3b\xee\x19\xdd\xa7\x13\x3a\xd7\x96\xdb\x75\xbb\x6e\xe2\xbe\xb8\x0b\x7b\x25\x20\x74\xfe\xc4\xd0\x39\x3b\xd4\x15\x5d\x6a\xc0\x6e\xde\x81\xbd\x42\xe7\xd9\xed\x3d\xdb\xc2\xaf\x87\x4b\x2c\x37\xdb\x4d\xa6\x50\x3c\x05\x8c\xc8\x13\xfb\x80\x15\xe4\x89\x3d\x82\xe2\x22\x34\x9b\x80\xb2\x9f\x71\x11\x92\xcd\xeb\x69\xf2\x72\xb3\xdd\xf3\xe9\x79\xf1\x25\xa0\xf8\x71\xf8\xbb\x91\xfa\x82\x4f\x77\x00\x15\xa1\x57\x8c\x6e\xb6\x00\x35\xfb\xa0\xab\x7a\xef\x0d\xb6\xc9\x80\x6c\x57\x07\x26\x20\xcc\xd2\xcb\x50\xc6\x80\x10\x7c\xaa\x3d\x25\x8f\x0a\x01\x19\x90\xd8\xbf\x3c\x4d\x7b\xa2\xc5\xe4\xe3\xab\x2f\xb1\xff\x6f\xbf\xb3\x11\x98\x0e\x02\x92\x94\x2f\x4f\x77\xb2\x4f\xde\x2a\xaf\xfc\x4d\xd1\x22\xfc\x3a\x34\x3d\xd3\x37\x7e\x7e\x44\x78\xbb\x05\xc7\x1a\x93\x28\x75\x9b\xd7\xa2\x06\x5f\xe3\x6b\x51\x33\x6a\x86\xee\x90\xc4\x47\x89\xf3\xdc\x30\xbc\x2e\xb1\x9c\x5e\xa6\x93\x43\x42\x27\x1b\x80\xa2\xfb\x50\x90\x0c\x1e\x7a\x37\x62\x3f\x29\x27\xab\x21\x69\xb4\x9c\xfb\x49\x79\x48\x6e\xd5\x9c\x2e\x14\x87\x47\xfa\x56\x7c\xc4\xdc\x5e\x29\x71\xc2\xfc\xc8\xdc\x86\x13\x0e\xf3\x63\xb3\x0e\x27\x78\xbc\x05\x25\x8f\x25\xe2\x77\x3f\xd7\xaf\xf6\xfa\x79\x3f\xa7\xeb\x17\xed\x71\xf1\x5b\xa6\x57\xf5\x8b\x36\x14\x32\xd8\x35\x2f\xf7\xa3\x9e\x54\xa0\x98\xe5\xfd\xdf\xfb\xaf\x5f\x8c\x3f\x27\x95\xef\xd5\xb0\x98\x35\x9e\x41\x09\x21\x04\x93\x42\x0a\x99\x8a\xa8\xa5\x08\xc1\x84\x00\x18\xa0\x85\xe6\x5c\x73\xbd\xa4\xb3\xe9\x9f\x00\x00\x00\xff\xff\xb0\x6a\x8c\x60\xfb\x01\x00\x00")

func assetsVbrixRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsVbrixRom,
		"assets/vbrix.rom",
	)
}

func assetsVbrixRom() (*asset, error) {
	bytes, err := assetsVbrixRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/vbrix.rom", size: 507, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsVersRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc8\xbf\x4a\x03\x31\x18\x00\xf0\xef\xcb\x05\x0c\xfe\xa1\xde\x07\x45\x70\xd0\x9b\x84\x6e\x1e\x08\xb6\x53\xf5\xc4\x08\x82\x4a\xad\xe8\x7a\x17\x35\x66\x4c\xb0\x45\xc7\xbe\x4a\xfa\x0c\x0e\x22\x3e\x44\x86\x7b\x80\x0e\x37\x64\x77\x70\x8c\x8b\xeb\x8f\x76\x2f\xaf\xae\x8b\x72\x34\x2a\x8b\xe9\x8d\xbc\x7b\x38\xbd\x3d\x9f\x16\x8b\x45\x02\x78\x84\x17\x80\xd5\x72\xa7\x86\x06\x42\xee\x52\xc8\x1d\x5a\x71\x78\x42\x07\x0e\x97\xfd\x40\x36\x05\xb2\xe8\x58\xb9\x4f\xc3\x5a\x34\xdb\x8a\x3f\x1d\x3f\xf7\x34\x0b\x79\x3b\x31\x18\xbd\x62\x86\x45\xaf\xb8\x59\x8b\x5e\xa1\x59\x8f\x5e\x65\x66\x23\x7a\xcd\x4c\x2f\x7a\xcd\xcd\x66\xf4\x1a\xcd\x56\xf4\x3a\xab\xd0\xa5\x8a\xd9\x54\x65\x0e\x2b\x6e\x51\xe2\x3c\x49\x36\x4b\x32\x9b\xa3\xe4\x33\x0c\xf9\x18\xe8\xa3\x9d\x8c\x81\x3e\xe9\xfe\x0d\xe9\xeb\x15\x0d\xbc\xe3\x10\xe8\x1b\x56\xb5\x68\xf8\xcf\x20\xf4\xeb\xa3\xdf\x41\xe8\xff\x7b\x7b\x26\xa8\xbb\x10\xd4\xd1\x1e\x75\x7f\x01\x00\x00\xff\xff\x08\x72\xbf\x0d\xe6\x00\x00\x00")

func assetsVersRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsVersRom,
		"assets/vers.rom",
	)
}

func assetsVersRom() (*asset, error) {
	bytes, err := assetsVersRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/vers.rom", size: 230, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsWallRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x12\x92\x50\x08\x77\xf4\xf1\x51\x48\xaa\x54\x70\x49\x2c\xcb\x4c\x51\x08\xf7\xf4\x0b\x71\x0d\x52\x58\xf4\x24\x81\x21\x91\x21\x49\xee\x82\xe0\x05\xc5\x02\x0e\x03\x07\x21\x85\x45\xf7\x13\xec\x12\x19\x2f\x88\x16\xb2\x1a\x4a\x09\x19\x5c\x10\x49\x66\x38\xc2\x5f\xc2\x91\xca\xd8\x12\x98\xca\x9c\xc6\x94\xce\xd8\xe1\x50\xc1\x94\xc9\x98\xc5\x92\xcd\xb0\xe8\xd6\x65\xd7\xeb\x8d\x7f\xb8\x94\x8e\xe4\x30\xfe\x11\xfd\xc3\x6e\xc3\x20\x94\xb4\xe8\x56\x4f\x41\x6f\xc3\xcb\x79\x42\x35\x2e\x8c\x42\x35\x97\x5d\x4b\xfe\x5d\x76\x7d\x35\x4f\xa8\xcb\x45\x52\xa8\xeb\xb2\x6b\x09\xd3\x65\xd7\xf6\x90\x8e\x14\x77\xc6\x54\x66\x77\xdb\xd4\xbf\x1e\x8c\x69\x4c\x1e\xb2\x69\xff\xee\x5c\xbc\xde\x68\xce\x28\x14\xd7\xd3\xd0\xe3\x9a\xcb\x30\xe7\x82\xd0\xbe\x5a\x46\x5b\x56\xa1\x35\x20\xb3\xb3\x19\x84\x62\x94\x8e\x54\x33\x0a\xc5\x2c\x7a\xfa\xdb\x38\xc7\x24\x97\xe9\x53\xea\x47\xcd\x3b\x57\x6b\x58\x3f\x69\xde\xb9\xca\xf0\xae\x01\x04\x1e\x80\xc0\x7f\x40\x00\x00\x00\xff\xff\x4b\x05\xa9\x64\xe5\x00\x00\x00")

func assetsWallRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsWallRom,
		"assets/wall.rom",
	)
}

func assetsWallRom() (*asset, error) {
	bytes, err := assetsWallRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/wall.rom", size: 229, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsWipeoffRom = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5a\x74\x26\x8b\x3d\x91\x21\x9b\x23\x81\xe1\x82\x60\x01\x47\xf5\x7f\x6b\x06\x21\xae\x42\x96\xaa\xff\x56\x0c\x42\x6c\x69\x0c\xe9\x02\x8b\xce\x26\x28\x24\xca\x5d\x10\x4c\x96\x4d\xb2\x6f\x62\x2a\xff\xef\xce\x20\xb4\xea\x3f\xd7\xa2\xd3\x97\x0c\x53\xff\x1f\x61\x34\x61\x4c\xf9\xbf\xe8\x6c\x0e\x43\x1e\xcb\xbb\x85\x39\xff\xf3\xd8\xde\x2d\xcc\x61\xbc\x20\xd8\x70\xe4\x82\xa0\x3f\xa3\xd0\x0c\x27\x86\x14\x46\x27\xfb\x94\xff\xce\x0c\xa9\x8c\xce\xf2\x42\x4b\x40\xba\x9a\x5c\x9a\x43\x2e\x19\xda\x33\x0a\x39\x39\xcb\x09\xcd\xc8\x62\xfa\x25\x51\xc6\xe8\x56\x20\xb4\xea\x92\x21\xc4\xb4\xa3\x8c\xa6\x8c\xa9\xff\x85\x9c\xb2\x98\x7f\x49\x80\xd4\x17\xff\x17\x32\x03\xd1\x42\x1a\x8b\xce\x5e\x10\x5c\xf4\xe1\x9b\xf1\xa7\xd4\x64\x89\x14\xe9\x0f\x9a\x97\x5d\x8b\x59\x3f\x82\xc9\x4f\x9a\x97\x5d\x85\x4e\x30\x36\xb8\xfc\x07\x04\x00\x00\xff\xff\x48\x60\x69\xb2\xce\x00\x00\x00")

func assetsWipeoffRomBytes() ([]byte, error) {
	return bindataRead(
		_assetsWipeoffRom,
		"assets/wipeoff.rom",
	)
}

func assetsWipeoffRom() (*asset, error) {
	bytes, err := assetsWipeoffRomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/wipeoff.rom", size: 206, mode: os.FileMode(420), modTime: time.Unix(1624739696, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/15puzzle.rom": assets15puzzleRom,
	"assets/banner.txt":   assetsBannerTxt,
	"assets/beep.wav":     assetsBeepWav,
	"assets/blinky.rom":   assetsBlinkyRom,
	"assets/blitz.rom":    assetsBlitzRom,
	"assets/breakout.rom": assetsBreakoutRom,
	"assets/brix.rom":     assetsBrixRom,
	"assets/connect4.rom": assetsConnect4Rom,
	"assets/guess.rom":    assetsGuessRom,
	"assets/hidden.rom":   assetsHiddenRom,
	"assets/invaders.rom": assetsInvadersRom,
	"assets/kaleid.rom":   assetsKaleidRom,
	"assets/maze.rom":     assetsMazeRom,
	"assets/merlin.rom":   assetsMerlinRom,
	"assets/missile.rom":  assetsMissileRom,
	"assets/pong.rom":     assetsPongRom,
	"assets/pong2.rom":    assetsPong2Rom,
	"assets/puzzle.rom":   assetsPuzzleRom,
	"assets/squash.rom":   assetsSquashRom,
	"assets/syzygy.rom":   assetsSyzygyRom,
	"assets/tank.rom":     assetsTankRom,
	"assets/tetris.rom":   assetsTetrisRom,
	"assets/tictac.rom":   assetsTictacRom,
	"assets/ufo.rom":      assetsUfoRom,
	"assets/vbrix.rom":    assetsVbrixRom,
	"assets/vers.rom":     assetsVersRom,
	"assets/wall.rom":     assetsWallRom,
	"assets/wipeoff.rom":  assetsWipeoffRom,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"15puzzle.rom": &bintree{assets15puzzleRom, map[string]*bintree{}},
		"banner.txt":   &bintree{assetsBannerTxt, map[string]*bintree{}},
		"beep.wav":     &bintree{assetsBeepWav, map[string]*bintree{}},
		"blinky.rom":   &bintree{assetsBlinkyRom, map[string]*bintree{}},
		"blitz.rom":    &bintree{assetsBlitzRom, map[string]*bintree{}},
		"breakout.rom": &bintree{assetsBreakoutRom, map[string]*bintree{}},
		"brix.rom":     &bintree{assetsBrixRom, map[string]*bintree{}},
		"connect4.rom": &bintree{assetsConnect4Rom, map[string]*bintree{}},
		"guess.rom":    &bintree{assetsGuessRom, map[string]*bintree{}},
		"hidden.rom":   &bintree{assetsHiddenRom, map[string]*bintree{}},
		"invaders.rom": &bintree{assetsInvadersRom, map[string]*bintree{}},
		"kaleid.rom":   &bintree{assetsKaleidRom, map[string]*bintree{}},
		"maze.rom":     &bintree{assetsMazeRom, map[string]*bintree{}},
		"merlin.rom":   &bintree{assetsMerlinRom, map[string]*bintree{}},
		"missile.rom":  &bintree{assetsMissileRom, map[string]*bintree{}},
		"pong.rom":     &bintree{assetsPongRom, map[string]*bintree{}},
		"pong2.rom":    &bintree{assetsPong2Rom, map[string]*bintree{}},
		"puzzle.rom":   &bintree{assetsPuzzleRom, map[string]*bintree{}},
		"squash.rom":   &bintree{assetsSquashRom, map[string]*bintree{}},
		"syzygy.rom":   &bintree{assetsSyzygyRom, map[string]*bintree{}},
		"tank.rom":     &bintree{assetsTankRom, map[string]*bintree{}},
		"tetris.rom":   &bintree{assetsTetrisRom, map[string]*bintree{}},
		"tictac.rom":   &bintree{assetsTictacRom, map[string]*bintree{}},
		"ufo.rom":      &bintree{assetsUfoRom, map[string]*bintree{}},
		"vbrix.rom":    &bintree{assetsVbrixRom, map[string]*bintree{}},
		"vers.rom":     &bintree{assetsVersRom, map[string]*bintree{}},
		"wall.rom":     &bintree{assetsWallRom, map[string]*bintree{}},
		"wipeoff.rom":  &bintree{assetsWipeoffRom, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
